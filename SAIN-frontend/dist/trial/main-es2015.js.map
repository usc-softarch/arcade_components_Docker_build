{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/home/account/account.component.html","./src/app/home/account/login/login.component.html","./src/app/home/account/register/register.component.html","./src/app/home/arcade/arcade-a2a/arcade-a2a.component.html","./src/app/home/arcade/arcade-acdc/arcade-acdc.component.html","./src/app/home/arcade/arcade-arc/arcade-arc.component.html","./src/app/home/arcade/arcade-archsmelldetector/arcade-archsmelldetector.component.html","./src/app/home/arcade/arcade-batchclonefinder/arcade-batchclonefinder.component.html","./src/app/home/arcade/arcade-c2caverageanalyze/arcade-c2caverageanalyze.component.html","./src/app/home/arcade/arcade-cleanupcodemaat/arcade-cleanupcodemaat.component.html","./src/app/home/arcade/arcade-cvg/arcade-cvg.component.html","./src/app/home/arcade/arcade-decaymetrics/arcade-decaymetrics.component.html","./src/app/home/arcade/arcade-dependencyfinderprocessing/arcade-dependencyfinderprocessing.component.html","./src/app/home/arcade/arcade-depfindrunner/arcade-depfindrunner.component.html","./src/app/home/arcade/arcade-depsbuilder/arcade-depsbuilder.component.html","./src/app/home/arcade/arcade-pipeextractor/arcade-pipeextractor.component.html","./src/app/home/arcade/arcade-pkg/arcade-pkg.component.html","./src/app/home/arcade/arcade-smelldensitianalyzer/arcade-smelldensitianalyzer.component.html","./src/app/home/arcade/arcade-smellevolutionanalyzer/arcade-smellevolutionanalyzer.component.html","./src/app/home/codemaat/codemaat-vcs/codemaat-vcs.component.html","./src/app/home/components-list/components-list.component.html","./src/app/home/contact-us/contact-us.component.html","./src/app/home/git/git-log/git-log.component.html","./src/app/home/header/footer/footer.component.html","./src/app/home/header/header-one/header-one.component.html","./src/app/home/header/header-two/header-two.component.html","./src/app/home/header/header.component.html","./src/app/home/home.component.html","./src/app/home/linux/linux-sed/linux-sed.component.html","./src/app/home/mallet/mallet-hlda/mallet-hlda.component.html","./src/app/home/mallet/mallet-importdir/mallet-importdir.component.html","./src/app/home/mallet/mallet-importfile/mallet-importfile.component.html","./src/app/home/mallet/mallet-infertopics/mallet-infertopics.component.html","./src/app/home/mallet/mallet-prune/mallet-prune.component.html","./src/app/home/mallet/mallet-split/mallet-split.component.html","./src/app/home/mallet/mallet-trainclassifier/mallet-trainclassifier.component.html","./src/app/home/mallet/mallet-traintopics/mallet-traintopics.component.html","./src/app/shared/loading-spinner/loading-spinner.component.html","./node_modules/tslib/tslib.es6.js","./src/app/_helpers/must-match.validator.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth-guard.service.ts","./src/app/authentication.service.ts","./src/app/home/account/account.component.css","./src/app/home/account/account.component.ts","./src/app/home/account/login/login.component.css","./src/app/home/account/login/login.component.ts","./src/app/home/account/register/register.component.css","./src/app/home/account/register/register.component.ts","./src/app/home/arcade/arcade-a2a/arcade-a2a.component.css","./src/app/home/arcade/arcade-a2a/arcade-a2a.component.ts","./src/app/home/arcade/arcade-acdc/arcade-acdc.component.css","./src/app/home/arcade/arcade-acdc/arcade-acdc.component.ts","./src/app/home/arcade/arcade-arc/arcade-arc.component.css","./src/app/home/arcade/arcade-arc/arcade-arc.component.ts","./src/app/home/arcade/arcade-archsmelldetector/arcade-archsmelldetector.component.css","./src/app/home/arcade/arcade-archsmelldetector/arcade-archsmelldetector.component.ts","./src/app/home/arcade/arcade-batchclonefinder/arcade-batchclonefinder.component.css","./src/app/home/arcade/arcade-batchclonefinder/arcade-batchclonefinder.component.ts","./src/app/home/arcade/arcade-c2caverageanalyze/arcade-c2caverageanalyze.component.css","./src/app/home/arcade/arcade-c2caverageanalyze/arcade-c2caverageanalyze.component.ts","./src/app/home/arcade/arcade-cleanupcodemaat/arcade-cleanupcodemaat.component.css","./src/app/home/arcade/arcade-cleanupcodemaat/arcade-cleanupcodemaat.component.ts","./src/app/home/arcade/arcade-cvg/arcade-cvg.component.css","./src/app/home/arcade/arcade-cvg/arcade-cvg.component.ts","./src/app/home/arcade/arcade-decaymetrics/arcade-decaymetrics.component.css","./src/app/home/arcade/arcade-decaymetrics/arcade-decaymetrics.component.ts","./src/app/home/arcade/arcade-dependencyfinderprocessing/arcade-dependencyfinderprocessing.component.css","./src/app/home/arcade/arcade-dependencyfinderprocessing/arcade-dependencyfinderprocessing.component.ts","./src/app/home/arcade/arcade-depfindrunner/arcade-depfindrunner.component.css","./src/app/home/arcade/arcade-depfindrunner/arcade-depfindrunner.component.ts","./src/app/home/arcade/arcade-depsbuilder/arcade-depsbuilder.component.css","./src/app/home/arcade/arcade-depsbuilder/arcade-depsbuilder.component.ts","./src/app/home/arcade/arcade-pipeextractor/arcade-pipeextractor.component.css","./src/app/home/arcade/arcade-pipeextractor/arcade-pipeextractor.component.ts","./src/app/home/arcade/arcade-pkg/arcade-pkg.component.css","./src/app/home/arcade/arcade-pkg/arcade-pkg.component.ts","./src/app/home/arcade/arcade-smelldensitianalyzer/arcade-smelldensitianalyzer.component.css","./src/app/home/arcade/arcade-smelldensitianalyzer/arcade-smelldensitianalyzer.component.ts","./src/app/home/arcade/arcade-smellevolutionanalyzer/arcade-smellevolutionanalyzer.component.css","./src/app/home/arcade/arcade-smellevolutionanalyzer/arcade-smellevolutionanalyzer.component.ts","./src/app/home/arcade/arcade.service.ts","./src/app/home/codemaat/codemaat-vcs/codemaat-vcs.component.css","./src/app/home/codemaat/codemaat-vcs/codemaat-vcs.component.ts","./src/app/home/codemaat/codemaat.service.ts","./src/app/home/components-list/components-list.component.css","./src/app/home/components-list/components-list.component.ts","./src/app/home/contact-us/contact-us.component.css","./src/app/home/contact-us/contact-us.component.ts","./src/app/home/git/git-log/git-log.component.css","./src/app/home/git/git-log/git-log.component.ts","./src/app/home/git/git.service.ts","./src/app/home/header/footer/footer.component.css","./src/app/home/header/footer/footer.component.ts","./src/app/home/header/header-one/header-one.component.css","./src/app/home/header/header-one/header-one.component.ts","./src/app/home/header/header-two/header-two.component.css","./src/app/home/header/header-two/header-two.component.ts","./src/app/home/header/header.component.css","./src/app/home/header/header.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/home/linux/linux-sed/linux-sed.component.css","./src/app/home/linux/linux-sed/linux-sed.component.ts","./src/app/home/linux/linux.service.ts","./src/app/home/mallet/mallet-hlda/mallet-hlda.component.css","./src/app/home/mallet/mallet-hlda/mallet-hlda.component.ts","./src/app/home/mallet/mallet-importdir/mallet-importdir.component.css","./src/app/home/mallet/mallet-importdir/mallet-importdir.component.ts","./src/app/home/mallet/mallet-importfile/mallet-importfile.component.css","./src/app/home/mallet/mallet-importfile/mallet-importfile.component.ts","./src/app/home/mallet/mallet-infertopics/mallet-infertopics.component.css","./src/app/home/mallet/mallet-infertopics/mallet-infertopics.component.ts","./src/app/home/mallet/mallet-prune/mallet-prune.component.css","./src/app/home/mallet/mallet-prune/mallet-prune.component.ts","./src/app/home/mallet/mallet-split/mallet-split.component.css","./src/app/home/mallet/mallet-split/mallet-split.component.ts","./src/app/home/mallet/mallet-trainclassifier/mallet-trainclassifier.component.css","./src/app/home/mallet/mallet-trainclassifier/mallet-trainclassifier.component.ts","./src/app/home/mallet/mallet-traintopics/mallet-traintopics.component.css","./src/app/home/mallet/mallet-traintopics/mallet-traintopics.component.ts","./src/app/home/mallet/mallet.service.ts","./src/app/shared/loading-spinner/loading-spinner.component.css","./src/app/shared/loading-spinner/loading-spinner.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-home></app-home>\\r\\n<router-outlet></router-outlet>\\r\\n<app-footer></app-footer>\"","export default \"<app-register></app-register>\\n\"","export default \"<div class=\\\"container py-8\\\" >\\n    <div class=\\\"row justify-content-center \\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n          <app-loading-spinner></app-loading-spinner>\\n        </div>\\n        <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n          <strong>Error!</strong> {{ error }}\\n        </div>\\n        <div *ngIf=\\\"!isLoading\\\" class=\\\"card\\\">\\n          <header class=\\\"card-header\\\">\\n            <h4 class=\\\"card-title mt-2\\\"><i class=\\\"fa fa-fw fa-user\\\"></i> Sign In</h4>\\n          </header>\\n          <article class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"col form-group js-form-message mb-4\\\">\\n                  <label class=\\\"form-label\\\">Email <span class=\\\"text-danger\\\">*</span></label> \\n                  <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                  <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                      <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n                  </div> \\n                </div> <!-- form-group end.// -->\\n                <div class=\\\"col form-group\\\">\\n                  <label class=\\\"form-label\\\">Password<span class=\\\"text-danger\\\">*</span></label>\\n                  <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                  <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                      <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6 characters</div>\\n                  </div>\\n                </div> <!-- form-group end.// -->\\n              </div> <!-- form-row end.// -->\\n                    \\n              <div class=\\\"form-group\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w btn-block\\\"> Log In  </button>\\n              </div> <!-- form-group// -->                                              \\n            </form>\\n          </article> <!-- card-body end .// -->\\n        </div> <!-- card.// -->\\n      </div> <!-- col.//-->\\n  \\n    </div> <!-- row.//-->   \\n</div> \\n\"","export default \"<div class=\\\"container pt-8\\\">\\n    <div class=\\\"row justify-content-center \\\">\\n        <div class=\\\"col-md-6\\\">\\n            <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                <app-loading-spinner></app-loading-spinner>\\n              </div>\\n            <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                <strong>Error!</strong> {{ error }}\\n              </div>\\n            <div *ngIf=\\\"!isLoading\\\" class=\\\"card\\\">\\n                <header class=\\\"card-header\\\">\\n                    <h4 class=\\\"card-title mt-2\\\"><span class=\\\"glyphicon glypghicon-user\\\"><i class=\\\"fa fa-fw fa-user\\\"></i> Sign up</span></h4>\\n                </header>\\n                <article class=\\\"card-body\\\">\\n                    <form  [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">First name<span class=\\\"text-danger\\\">*</span></label>\\n                                <input type=\\\"text\\\" formControlName=\\\"firstname\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstname.errors }\\\" />\\n                                <div *ngIf=\\\"submitted && f.firstname.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.firstname.errors.required\\\">First Name is required</div>\\n                                </div>   \\n                            </div> <!-- form-group end.// -->\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Last name<span class=\\\"text-danger\\\">*</span></label>\\n                                <input type=\\\"text\\\" formControlName=\\\"lastname\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastname.errors }\\\" />\\n                                <div *ngIf=\\\"submitted && f.lastname.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.lastname.errors.required\\\">Last Name is required</div>\\n                                </div>\\n                            </div>                           \\n                        </div> <!-- form-row end.// -->\\n                    \\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"form-label\\\">Email address<span class=\\\"text-danger\\\">*</span></label>\\n                            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                                <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n                            </div>\\n                        </div> <!-- form-group end.// -->\\n                    \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Password<span class=\\\"text-danger\\\">*</span></label>\\n                                <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                                <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                                    <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6 characters</div>\\n                                </div>\\n                            </div> <!-- form-group end.// -->\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Confirm Password<span class=\\\"text-danger\\\">*</span></label>\\n                                <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\" />\\n                                <div *ngIf=\\\"submitted && f.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.confirmPassword.errors.required\\\">Confirm Password is required</div>\\n                                    <div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">Passwords must match</div>\\n                                </div>\\n                            </div> <!-- form-group end.// -->\\n                        </div> <!-- form-row end.// -->\\n                    \\n                        <div class=\\\"form-group\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w btn-block\\\"> Register  </button>\\n                        </div> <!-- form-group// -->                                              \\n                    </form>\\n                </article> <!-- card-body end .// -->\\n            </div> <!-- card.// -->\\n        </div> <!-- col.//-->\\n    </div> <!-- row.//-->   \\n</div> \\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade A2a</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">                    \\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Version Distance Option<span class=\\\"text-danger\\\">:</span></label>\\n                                <label>1 - for version distance = 1</label><br>\\n                                <label>2 - for all combinations of version distance > 1</label><br>\\n                                <label>3 - for a subset of combinations of version distance > 1</label>\\n                                <select formControlName=\\\"distOp\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.distOp.errors}\\\" >\\n                                    <option>1</option>\\n                                    <option>2</option>\\n                                    <option>3</option>\\n                                </select>\\n                                <div *ngIf=\\\"submitted && f.distOp.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"submitted && f.distOp.errors\\\">Log Type is required</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <!-- <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                                <label class=\\\"form-label\\\">(Input) Deps File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"depsFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"depsFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.depsFile.errors}\\\">\\n                                \\n                                <div *ngIf=\\\"submitted && f.depsFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.depsFile.errors.required\\\">Required _deps file input</div>\\n                                </div>\\n                            </div>\\n                        </div> -->\\n                        \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Clustered File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"clusteredDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"clusteredDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.clusteredDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.clusteredDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.clusteredDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade ACDC</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                                <!-- <div class=\\\"input-group\\\"> -->\\n                                    <!-- <div class=\\\"input-group-prepend\\\">                                   \\n                                        <span class=\\\"input-group-text\\\">deps file path</span>\\n                                    </div> -->\\n                                    <!-- <div class=\\\"custom-file\\\">   -->\\n                                        <!-- <input name=\\\"revisionfile\\\" type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"files\\\" (change)=\\\"onFileSelected1($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  historyRevision=='Input _deps File' }\\\"> -->\\n                                        <label class=\\\"form-label\\\">(Input) Deps File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                        <input name=\\\"depsFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"depsFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.depsFile.errors}\\\">\\n                                        \\n                                        <!-- <label class=\\\"custom-file-label\\\" for=\\\"files\\\">{{historyRevision}}</label> -->\\n                                        <div *ngIf=\\\"submitted && f.depsFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"f.depsFile.errors.required\\\">Required _deps file input</div>\\n                                        </div>\\n                                    <!-- </div> -->\\n                                <!-- </div>  -->\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"form-row\\\"> -->\\n                            <!-- <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Log Type<span class=\\\"text-danger\\\">*</span></label>\\n                                <select formControlName=\\\"logType\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.logType.errors}\\\" >\\n                                    <option>git</option>\\n                                    <option>svn</option>\\n                                </select>\\n                                <div *ngIf=\\\"submitted && f.logType.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"submitted && f.logType.errors\\\">Log Type is required</div>\\n                                </div>\\n                            </div> -->\\n                            <!-- <div class=\\\"col form-group\\\">   -->\\n                                    <!--The \\\"from\\\" Date Picker -->\\n                            \\n                                    <!-- <div class=\\\"md-form\\\">\\n                                        <label class=\\\"form-label\\\">Start Date<span class=\\\"text-danger\\\">*</span></label>\\n                                        <input placeholder=\\\"Start Date (dd/mm/yyyy)\\\" type=\\\"text\\\" formControlName=\\\"startDate\\\"  id=\\\"date-picker-example\\\" class=\\\"form-control\\\"\\n                                        [ngClass]=\\\"{'is-invalid': submitted && f.startDate.errors}\\\">\\n                                        <div *ngIf=\\\"submitted && f.startDate.errors\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"submitted && f.startDate.errors\\\">Start Date is required</div>\\n                                        </div>\\n                                    </div> -->\\n\\n                                \\n                            <!-- </div>\\n                            <div class=\\\"col form-group\\\"> -->\\n                                    <!--The \\\"to\\\" Date Picker -->\\n                                    <!-- <label class=\\\"form-label\\\">End Date<span class=\\\"text-danger\\\">*</span></label>\\n                                    <input placeholder=\\\"End Date (dd/mm/yyyy)\\\" type=\\\"text\\\" formControlName=\\\"endDate\\\" id=\\\"endingDate\\\" class=\\\"form-control\\\"\\n                                    [ngClass]=\\\"{'is-invalid': submitted && f.endDate.errors}\\\">\\n                                    <div *ngIf=\\\"submitted && f.endDate.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"submitted && f.endDate.errors\\\">End Date is required</div>\\n                                    </div>        \\n                            </div> -->\\n                        <!-- </div> -->\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <!-- <div class=\\\"input-group\\\" > -->\\n                                    <!-- <div class=\\\"input-group-prepend\\\"  >\\n                                        <span class=\\\"input-group-text\\\">clustered file path</span>\\n                                    </div> -->\\n                                    <!-- <div class=\\\"custom-file\\\"> -->\\n                                        <label class=\\\"form-label\\\">(Output) Clustered File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                        <input name=\\\"clusteredFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"clusteredFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.clusteredFile.errors}\\\">\\n                                        <!-- <label class=\\\"custom-file-label\\\" for=\\\"dsmfiles\\\">{{structurl_DSM}}</label> -->\\n                                        <div *ngIf=\\\"submitted && f.clusteredFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"f.clusteredFile.errors.required\\\">Required clustered file output</div>\\n                                        </div>\\n                                    <!-- </div> -->\\n                                <!-- </div>  -->\\n                            </div>\\n                        </div>\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade Arc</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Source Dir Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"srcDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"srcDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.srcDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.srcDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.srcDir.errors.required\\\">Required _deps file input</div>\\n                                </div>                                    \\n                            </div>\\n                        </div>\\n                      \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Output) Output Dir Path (should have base dir with prerequisite files: output.pipe, infer.mallet and topicmodel.data)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputDir.errors}\\\">\\n                                \\n                                <div *ngIf=\\\"submitted && f.outputDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputDir.errors.required\\\">Required clustered file output</div>\\n                                </div>                                    \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Class Dir<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"classDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"classDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.classDir.errors}\\\">\\n                                \\n                                <div *ngIf=\\\"submitted && f.classDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.classDir.errors.required\\\">Required clustered file output</div>\\n                                </div>                                    \\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade Archsmelldetector</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                                <!-- <div class=\\\"input-group\\\"> -->                                   \\n                                    <!-- <div class=\\\"custom-file\\\">   -->\\n                                        <!-- <input name=\\\"revisionfile\\\" type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"files\\\" (change)=\\\"onFileSelected1($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  historyRevision=='Input _deps File' }\\\"> -->\\n                                        <label class=\\\"form-label\\\">(Input) Deps File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                        <input name=\\\"depsFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"depsFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.depsFile.errors}\\\">                                        \\n                                        <!-- <label class=\\\"custom-file-label\\\" for=\\\"files\\\">{{historyRevision}}</label> -->\\n                                        <div *ngIf=\\\"submitted && f.depsFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"f.depsFile.errors.required\\\">Required _deps file input</div>\\n                                        </div>\\n                                    <!-- </div> -->\\n                                <!-- </div>  -->\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <!-- <div class=\\\"input-group\\\" > -->                                    \\n                                    <!-- <div class=\\\"custom-file\\\"> -->\\n                                        <label class=\\\"form-label\\\">(Input) Clustered File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                        <input name=\\\"clusteredFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"clusteredFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.clusteredFile.errors}\\\">\\n                                        <!-- <label class=\\\"custom-file-label\\\" for=\\\"dsmfiles\\\">{{structurl_DSM}}</label> -->\\n                                        <div *ngIf=\\\"submitted && f.clusteredFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"f.clusteredFile.errors.required\\\">Required clustered file output</div>\\n                                        </div>\\n                                    <!-- </div> -->\\n                                <!-- </div>  -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <!-- <div class=\\\"input-group\\\" > -->                                    \\n                                    <!-- <div class=\\\"custom-file\\\"> -->\\n                                        <label class=\\\"form-label\\\">(Output) smell file path<span class=\\\"text-danger\\\">:</span></label>\\n                                        <input name=\\\"smellFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"smellFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.smellFile.errors}\\\">\\n                                        <!-- <label class=\\\"custom-file-label\\\" for=\\\"dsmfiles\\\">{{structurl_DSM}}</label> -->\\n                                        <div *ngIf=\\\"submitted && f.smellFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"f.smellFile.errors.required\\\">Required clustered file output</div>\\n                                        </div>\\n                                    <!-- </div> -->\\n                                <!-- </div>  -->\\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Clean-up Code-Maat</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">                    \\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Project source code dir path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.inputDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Output) Output clone.xml dir path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade C2cAverageAnalyze</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">                    \\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">                      \\n                        \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(input) Cvg Log File<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"cvglogFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"cvglogFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.cvglogFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.cvglogFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.cvglogFile.errors.required\\\">Required cvg log file input</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Clean-up Code-Maat</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">                    \\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Code Maat csv file dir path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.inputDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade Cvg</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">        \\n                                <label class=\\\"form-label\\\">(Input) Cluster Dir Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"clusterDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"clusterDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.clusterDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.clusterDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.clusterDir.errors.required\\\">Required _deps Dir input</div>\\n                                </div>\\n                            </div>\\n                        </div>                         \\n                        \\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade DecayMetrics</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>                \\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>       \\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Deps Dir Path<span class=\\\"text-danger\\\">:</span></label>  \\n                                <input name=\\\"depsDir\\\" type=\\\"text\\\" formControlName=\\\"depsDir\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': submitted && f.depsDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.depsDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.depsDir.errors.required\\\">Required field!!</div>\\n                                </div> \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Cluster Dir Path<span class=\\\"text-danger\\\">:</span></label>  \\n                                <input name=\\\"clusterDir\\\" type=\\\"text\\\" formControlName=\\\"clusterDir\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': submitted && f.clusterDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.clusterDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.clusterDir.errors.required\\\">Required field!!</div>\\n                                </div> \\n                            </div>\\n                        </div>                                 \\n\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> \\n                    </form>\\n                    \\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>            \\n            </div>\\n\\n\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Clean-up Code-Maat</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">                    \\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Project(s) source code dir path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.inputDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) cluster dir folder<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"clusterDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"clusterDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.clusterDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.clusterDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.clusterDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) DepFinder dir folder<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"depFinderDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"depFinderDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.depFinderDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.depFinderDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.depFinderDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Clone dir folder<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"cloneDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"cloneDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.cloneDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.cloneDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.cloneDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Logical Dep File<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"logicalDepFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"logicalDepFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.logicalDepFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.logicalDepFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.logicalDepFile.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Package Name<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"packageName\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"packageName\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.packageName.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.packageName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.packageName.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Output) Output deps.xml dir path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Clean-up Code-Maat</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">                    \\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Project(s) source code dir path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.inputDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) class dir path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"classDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"classDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.classDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.classDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.classDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Output) Output deps.xml dir path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputDir.errors.required\\\">Required clustered file output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade Depsbuilder</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>                \\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>       \\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                        <div class=\\\"form-row\\\">                               \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input type=\\\"radio\\\" [checked]=true formControlName=\\\"language\\\" value=\\\"upload\\\" id=\\\"java\\\" (click)=\\\"onRadioChange('java')\\\"><label for=\\\"java\\\">Java</label></div>\\n                            </div> <!-- form-group end.// -->\\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input type=\\\"radio\\\" formControlName=\\\"language\\\" value=\\\"github\\\" id=\\\"cpp\\\" (click)=\\\"onRadioChange('cpp')\\\"><label for=\\\"cpp\\\">C++</label></div>\\n                            </div>  \\n                        </div>\\n                        <div class=\\\"form-row\\\" *ngIf=\\\"language=='cpp'\\\">\\n                            <div class=\\\"col form-group\\\">\\n\\n\\n                                <!-- <div class=\\\"input-group\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\">Upload</span>\\n                                    </div>\\n                                    <div class=\\\"custom-file\\\">\\n                                        <input name=\\\"revisionfile\\\" type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"files2\\\" (change)=\\\"onFileSelected1($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  project=='Upload Project' }\\\">\\n                                        <label class=\\\"custom-file-label\\\" for=\\\"files2\\\">{{project}}</label>\\n                                        <div *ngIf=\\\"submitted && project=='Upload Project'\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"project=='Upload Project'\\\">Project IS Required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>  -->\\n\\n\\n                                <label class=\\\"form-label\\\">(Input) Project's Source Code Dir<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"srcDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"srcDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.srcDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.srcDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.srcDir.errors.required\\\">Required field!!</div>\\n                                </div> \\n\\n\\n                            </div>\\n                        </div>                        \\n\\n\\n                        <div class=\\\"form-row\\\" *ngIf=\\\"language=='java'\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Bin Dir Path<span class=\\\"text-danger\\\">:</span></label>  \\n                                <input name=\\\"classpath\\\" type=\\\"text\\\" formControlName=\\\"classpath\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': submitted && f.classpath.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.classpath.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.classpath.errors.required\\\">Required field!!</div>\\n                                </div> \\n                            </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Output) Deps File path<span class=\\\"text-danger\\\">:</span></label>  \\n                                <input type=\\\"text\\\" formControlName=\\\"depsFile\\\" class=\\\"form-control\\\" \\n                                [ngClass]=\\\"{'is-invalid': submitted && f.depsFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.depsFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.depsFile.errors.required\\\">Required field!!</div>\\n                                </div> \\n                            </div>\\n                        </div>\\n\\n\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> \\n                    </form>\\n\\n\\n                    \\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>            \\n            </div>\\n\\n\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade PipeExtractor</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Source Dir Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"srcDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"srcDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.srcDir.errors}\\\">\\n                                \\n                                <div *ngIf=\\\"submitted && f.srcDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.srcDir.errors.required\\\">Required source dir input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n                       \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">(Output) Output Dir Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputDir.errors}\\\">\\n                                <!-- <label class=\\\"custom-file-label\\\" for=\\\"dsmfiles\\\">{{structurl_DSM}}</label> -->\\n                                <div *ngIf=\\\"submitted && f.outputDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputDir.errors.required\\\">Required output location</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade Pkg</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">        \\n                                <label class=\\\"form-label\\\">(Input) Deps Dir Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"depsDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"depsDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.depsDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.depsDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.depsDir.errors.required\\\">Required _deps Dir input</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                         \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Pkg Prefixes<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"pkgprefixes\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pkgprefixes\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.pkgprefixes.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.pkgprefixes.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.pkgprefixes.errors.required\\\">Required pkg prefixes output</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade SmellDensityAnalyzer</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                                <label class=\\\"form-label\\\">(Input) Smells Dir Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"smellsDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"smellsDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.smellsDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.smellsDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.smellsDir.errors.required\\\">Required _deps file input</div>\\n                                </div>                                 \\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                                <label class=\\\"form-label\\\">(Input) Clustered Dir Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"clusteredDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"clusteredDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.clusteredDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.clusteredDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.clusteredDir.errors.required\\\">Required clustered file output</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Arcade SmellEvolutionAnalyzer</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                                <label class=\\\"form-label\\\">(Input) Smells Dir Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"smellsDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"smellsDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.smellsDir.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.smellsDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.smellsDir.errors.required\\\">Required _deps file input</div>\\n                                </div>                                 \\n                            </div>\\n                        </div>                        \\n                    \\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Code Maat Version Control Statistics</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Input Log File: git log or svn log file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputLogFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputLogFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputLogFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.inputLogFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputLogFile.errors.required\\\">Required topic model input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">(Output) Output File<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Version Control Type (default is git2)<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"versionControlType\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.versionControlType.errors}\\\" >\\n                                    <option>git2</option> \\n                                    <option>git</option> \\n                                    <option>svn</option> \\n                                    <option>hg</option> \\n                                    <option>p4</option> \\n                                    <option>tfs</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">The analysis to run (default is authors)<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"analysis\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.analysis.errors}\\\" >\\n                                    <option>authors</option> \\n                                    <option>abs-churn</option> \\n                                    <option>age</option> \\n                                    <option>author-churn</option> \\n                                    <option>communication</option> \\n                                    <option>coupling</option> \\n                                    <option>entity-churn</option> \\n                                    <option>entity-effort</option> \\n                                    <option>entity-ownership</option> \\n                                    <option>fragmentation</option> \\n                                    <option>identity</option> \\n                                    <option>main-dev</option>\\n                                    <option>main-dev-by-revs</option> \\n                                    <option>messages</option> \\n                                    <option>refactoring-main-dev</option> \\n                                    <option>revisions</option> \\n                                    <option>soc</option> \\n                                    <option>summary</option>\\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Input Encoding (default is UTF-8)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputEncoding\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputEncoding\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputEncoding.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.inputEncoding.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputEncoding.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Max Rows in output (default is 0))<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"maxRows\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"maxRows\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.maxRows.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.maxRows.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.maxRows.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Minimum number of revisions to include an entity in the analysis (default is 5))<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"minRevisions\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"minRevisions\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.minRevisions.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.minRevisions.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.minRevisions.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Minimum number of shared revisions to include an entity in the analysis (default is 5))<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"minSharedRevisions\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"minSharedRevisions\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.minSharedRevisions.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.minSharedRevisions.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.minSharedRevisions.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Minimum degree of coupling (in percentage) to consider (default is 30)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"minCouplings\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"minCouplings\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.minCouplings.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.minCouplings.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.minCouplings.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Maximum degree of coupling (in percentage) to consider (default is 100)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"maxCouplings\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"maxCouplings\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.maxCouplings.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.maxCouplings.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.maxCouplings.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Maximum number of modules in a change set if it shall be included in a coupling analysis (default is 30)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"maxChangeSetSize\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"maxChangeSetSize\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.maxChangeSetSize.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.maxChangeSetSize.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.maxChangeSetSize.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Group file: A file with a pre-defined set of layers. The data will be aggregated according to the group of layers<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"groupFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"groupFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.groupFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.groupFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.groupFile.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">A regex to match against commit messages. Used with -messages in analyses<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"regex\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"regex\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.regex.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.regex.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.regex.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Temporal Period: Instructs Code Maat to consider all commits during the same day as a single, logical commit  <span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"temporalPeriod\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.temporalPeriod.errors}\\\" >\\n                                    <option>null</option> \\n                                    <option>1</option>                                      \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Age Time Now: Specify a date as YYYY-MM-dd that counts as time zero when doing a code age analysis (default 0 means none)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"agetimeNow\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"agetimeNow\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.agetimeNow.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.agetimeNow.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.agetimeNow.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">  \\n    <div class=\\\"row\\\">   \\n        <div class=\\\"col-md-9 mt-1 pl-2\\\">\\n            <!-- row-2 details col-->\\n            <!-- <div class=\\\"row row-details\\\" *ngFor=\\\"let tool of tools;index as i;\\\">  -->\\n            <!----------------------------- arcade DepsBuidler -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\"><!-- col-2-->\\n                    <div class=\\\"row\\\"> <!-- row-3-->\\n                        <div class=\\\"col-lg-12\\\"><!-- col-3 -->\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade DepsBuilder</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\"><!-- row-4 -->\\n                        <div class=\\\"col-lg-12\\\"><!-- col-4 -->\\n                            <div class=\\\"file-information p-0\\\"><!-- information-label -->\\n                                <label class=\\\"snippet-id-label\\\">1</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-depsbuilders-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-depsbuilder\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div><!-- information-label -->\\n                        </div><!-- /col-4 -->\\n                    </div>\\n                    <div class=\\\"row\\\"><!-- row-5 -->\\n                        <div class=\\\"col-lg-12\\\"> <!-- col-5 -->\\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div><!-- /col-5 -->\\n                    </div><!-- row-5 -->\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade Acdc -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade Acdc</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">2</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-acdc-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-acdc\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade Archsmelldetector -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade Archsmelldetector</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">3</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-archsmelldetector-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-archsmelldetector\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <!----------------------------- arcade Pkg -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade Pkg</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">4</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Python</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-pkg-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-pkg\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <!----------------------------- arcade A2a -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade A2a</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">5</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-a2a-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-a2a\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade Cvg -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade Cvg</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">6</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Python</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-cvg-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-cvg\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade C2cAverageAnalyze -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade C2cAverageAnalyze</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">7</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-c2caverageanalyze-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-c2caverageanalyze\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade Decaymetrics -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade Decaymetrics</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">8</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-decaymetrics-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-decaymetrics\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade SmellDensityAnalyzer -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade SmellDensityAnalyzer</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">9</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-smelldensityanalyzer-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-smelldensityanalyzer\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade SmellEvolutionAnalyzer -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade SmellEvolutionAnalyzer</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">10</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-smellevolutionanalyzer-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-smellevolutionanalyzer\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade PipeExtractor -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade PipeExtractor</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">11</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-pipeextractor-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-pipeextractor\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- mallet import-dir -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Mallet TopicModelGenerator</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">12</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/mallet-importdir-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/mallet-importdir\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n             <!----------------------------- mallet train-topics -------------------------->\\n             <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Mallet TrainTopics</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">13</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/mallet-traintopics-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/mallet-traintopics\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade Arc -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade Arc</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">14</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-arc-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-arc\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- mallet import-file -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Mallet Import File</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">15</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/mallet-importfile-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/mallet-importfile\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- mallet train-classifier -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Mallet Train Classifier</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">16</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/mallet-trainclassifier-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/mallet-trainclassifier\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- mallet infer-topics -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Mallet Infer Toopic</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">17</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/mallet-infertopics-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/mallet-infertopics\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- mallet hlda -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Mallet hlda</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">18</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/mallet-hlda-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/mallet-hlda\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- mallet prune -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Mallet prune</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">19</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/mallet-prune-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/mallet-prune\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- mallet split -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Mallet split</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Architecture Analysis</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">20</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/mallet-split-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/mallet-split\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- codemaat vcs -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Code Maat Version Control Statistics</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Version Control Statistics</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">21</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/codemaat-vcs-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/codemaat-vcs\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- git log -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Git Log</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Version Control Statistics</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">22</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/git-log-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/git-log\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- linux sed -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Linux Sed</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Text Steam Editor</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">23</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Platform</span><span class=\\\"secton-label-right\\\">Unix</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/linux-sed-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/linux-sed\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- Clean-up Code-Maat -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Clean-up Code-Maat</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Text Processing</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">24</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-cleanupcodemaat-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-cleanupcodemaat\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade BatchCloneFinder -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade Batch Clone Finder</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Text Processing</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">25</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-batchclonefinder-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-batchclonefinder\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade DepFindRunner -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade DepFindRunner</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Text Processing</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">26</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-depfindrunner-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-depfindrunner\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!----------------------------- arcade DependencyFinderProcessing -------------------------->\\n            <div class=\\\"row row-details\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\"> \\n                        <div class=\\\"col-lg-12\\\">\\n                            <label class=\\\"row-caption\\\"><span class=\\\"secton-label-left\\\">Name</span><span class=\\\"secton-label-right\\\">Arcade DependencyFinderProcessing</span> </label>\\n                            <label class=\\\"row-caption row-caption-right\\\"> <span class=\\\"secton-label-left\\\">Category</span><span class=\\\"secton-label-right\\\">Text Processing</span></label>\\n                        </div>\\n                    </div>\\n            \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"file-information p-0\\\">\\n                                <label class=\\\"snippet-id-label\\\">27</label>\\n                                <label class=\\\"information-label p-1 m-1 ml-2\\\"><span class=\\\"secton-label-left\\\">Programing Language</span><span class=\\\"secton-label-right\\\">Java</span></label>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Download</button>\\n                                <a href=\\\"https://hub.docker.com/repository/docker/nsfsain/arcade-dependencyfinderprocessing-service\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1\\\"><i class=\\\"fab fa-docker\\\" aria-hidden=\\\"true\\\"></i> Docker</button></a>\\n                                <a routerLink=\\\"/arcade-dependencyfinderprocessing\\\"><button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary-dark tactics-button p-1 px-3\\\" ><i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i> Run tool</button></a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\"> \\n                            <label class=\\\"snippet-caption\\\">Tool Description</label>\\n                            <a class=\\\"btn btn-default float-right pb-0\\\" href=\\\"#\\\"> Details &raquo;</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"snippet-codes\\\">\\n                                <p class=\\\"description text-justify\\\">blank</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <!--end of col 9-->\\n        </div>\\n        <!--end of first row-->\\n    </div>\\n    <!--end of container-->\\n</div>\\n\"","export default \"\\n<div class=\\\"container py-8\\\">\\n    <div class=\\\"row justify-content-center \\\">\\n        <div class=\\\"col-md-10 col-sm-12\\\">\\n            <div class=\\\"mr-xl-6\\\">\\n                <div class=\\\"border-bottom border-color-1 mb-5\\\">\\n                    <h3 class=\\\"section-title mb-0 pb-2 font-size-25\\\">Leave us a Message</h3>\\n                </div>\\n                <form class=\\\"js-validate\\\" novalidate=\\\"novalidate\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <!-- Input -->\\n                            <div class=\\\"js-form-message mb-4\\\">\\n                                <label class=\\\"form-label\\\">\\n                                    First name\\n                                    <span class=\\\"text-danger\\\">*</span>\\n                                </label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" placeholder=\\\"\\\" aria-label=\\\"\\\" required=\\\"\\\" data-msg=\\\"Please enter your frist name.\\\" data-error-class=\\\"u-has-error\\\" data-success-class=\\\"u-has-success\\\" autocomplete=\\\"off\\\">\\n                            </div>\\n                            <!-- End Input -->\\n                        </div>\\n\\n                        <div class=\\\"col-md-6\\\">\\n                            <!-- Input -->\\n                            <div class=\\\"js-form-message mb-4\\\">\\n                                <label class=\\\"form-label\\\">\\n                                    Last name\\n                                    <span class=\\\"text-danger\\\">*</span>\\n                                </label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" placeholder=\\\"\\\" aria-label=\\\"\\\" required=\\\"\\\" data-msg=\\\"Please enter your last name.\\\" data-error-class=\\\"u-has-error\\\" data-success-class=\\\"u-has-success\\\">\\n                            </div>\\n                            <!-- End Input -->\\n                        </div>\\n\\n                        <div class=\\\"col-md-12\\\">\\n                            <!-- Input -->\\n                            <div class=\\\"js-form-message mb-4\\\">\\n                                <label class=\\\"form-label\\\">\\n                                    Subject\\n                                </label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Subject\\\" placeholder=\\\"\\\" aria-label=\\\"\\\" data-msg=\\\"Please enter subject.\\\" data-error-class=\\\"u-has-error\\\" data-success-class=\\\"u-has-success\\\">\\n                            </div>\\n                            <!-- End Input -->\\n                        </div>\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"js-form-message mb-4\\\">\\n                                <label class=\\\"form-label\\\">\\n                                    Your Message\\n                                </label>\\n\\n                                <div class=\\\"input-group\\\">\\n                                    <textarea class=\\\"form-control p-5\\\" rows=\\\"4\\\" name=\\\"text\\\" placeholder=\\\"\\\"></textarea>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-3\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w px-5\\\">Send Message</button>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Git Log</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Git Repo URL<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"gitRepoURL\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"gitRepoURL\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.gitRepoURL.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.gitRepoURL.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.gitRepoURL.errors.required\\\">Required topic model input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Shallow Since (YYYY-MM-DD)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"shallowSince\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"shallowSince\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.shallowSince.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.shallowSince.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.shallowSince.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <label class=\\\"form-label\\\">git log options <span class=\\\"text-danger\\\">:</span></label>  \\n                        <div class=\\\"form-row\\\">                                     \\n                            <div class=\\\"col form-group\\\">                                \\n                                <div class=\\\"icheck-primary\\\"><input #follow type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"follow\\\" id=\\\"follow\\\" (change)=\\\"followCheckbox(follow.checked)\\\"><label for=\\\"follow\\\">--follow</label></div>\\n                            </div> \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #source type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"source\\\" id=\\\"source\\\" (change)=\\\"sourceCheckbox(source.checked)\\\"><label for=\\\"source\\\">--source</label></div>\\n                            </div>  \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #fulldiff type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"fulldiff\\\" id=\\\"fulldiff\\\" (change)=\\\"fulldiffCheckbox(fulldiff.checked)\\\"><label for=\\\"fulldiff\\\">--full-diff</label></div>\\n                            </div> \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #logsize type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"logsize\\\" id=\\\"logsize\\\" (change)=\\\"logsizeCheckbox(logsize.checked)\\\"><label for=\\\"logsize\\\">--log-size</label></div>\\n                            </div>                             \\n                        </div>\\n\\n                        <label class=\\\"form-label\\\">more options<span class=\\\"text-danger\\\">:</span></label>  \\n                        <div class=\\\"form-row\\\">                                     \\n                            <div class=\\\"col form-group\\\">                                \\n                                <div class=\\\"icheck-primary\\\"><input #numstat type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"numstat\\\" id=\\\"numstat\\\" (change)=\\\"numstatCheckbox(numstat.checked)\\\"><label for=\\\"numstat\\\">--numstat</label></div>\\n                            </div> \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #norenames type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"norenames\\\" id=\\\"norenames\\\" (change)=\\\"norenamesCheckbox(norenames.checked)\\\"><label for=\\\"norenames\\\">--no-renames</label></div>\\n                            </div>  \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #allmatch type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"allmatch\\\" id=\\\"allmatch\\\" (change)=\\\"allmatchCheckbox(allmatch.checked)\\\"><label for=\\\"allmatch\\\">--all-match</label></div>\\n                            </div> \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #invertgrep type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"invertgrep\\\" id=\\\"invertgrep\\\" (change)=\\\"invertgrepCheckbox(invertgrep.checked)\\\"><label for=\\\"invertgrep\\\">--invert-grep</label></div>\\n                            </div>\\n                            <div class=\\\"col form-group\\\">                                \\n                                <div class=\\\"icheck-primary\\\"><input #regexpIgnorecase type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"regexpIgnorecase\\\" id=\\\"regexpIgnorecase\\\" (change)=\\\"regexpIgnorecaseCheckbox(regexpIgnorecase.checked)\\\"><label for=\\\"regexpIgnorecase\\\">--regexp-ignore-case</label></div>\\n                            </div> \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #basicRegexp type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"basicRegexp\\\" id=\\\"basicRegexp\\\" (change)=\\\"basicRegexpCheckbox(basicRegexp.checked)\\\"><label for=\\\"basicRegexp\\\">--basic-regexp</label></div>\\n                            </div>  \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #extendedRegexp type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"extendedRegexp\\\" id=\\\"extendedRegexp\\\" (change)=\\\"extendedRegexpCheckbox(extendedRegexp.checked)\\\"><label for=\\\"extendedRegexp\\\">--extended-regexp</label></div>\\n                            </div> \\n                            \\n                        </div>\\n                        <div class=\\\"form-row\\\">   \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #invertgrep type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"fixedstrings\\\" id=\\\"fixedstrings\\\" (change)=\\\"fixedstringsCheckbox(fixedstrings.checked)\\\"><label for=\\\"fixedstrings\\\">--fixed-strings</label></div>\\n                            </div>   \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #perlRegexp type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"perlRegexp\\\" id=\\\"perlRegexp\\\" (change)=\\\"perlRegexpCheckbox(perlRegexp.checked)\\\"><label for=\\\"perlRegexp\\\">--perl-regexp</label></div>\\n                            </div>  \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #removeEmpty type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"removeEmpty\\\" id=\\\"removeEmpty\\\" (change)=\\\"removeEmptyCheckbox(removeEmpty.checked)\\\"><label for=\\\"removeEmpty\\\">--remove-empty</label></div>\\n                            </div> \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #merges type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"merges\\\" id=\\\"merges\\\" (change)=\\\"mergesCheckbox(merges.checked)\\\"><label for=\\\"merges\\\">--merges</label></div>\\n                            </div>\\n                            <div class=\\\"col form-group\\\">                                \\n                                <div class=\\\"icheck-primary\\\"><input #nominParents type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"nominParents\\\" id=\\\"nominParents\\\" (change)=\\\"nominParentsCheckbox(nominParents.checked)\\\"><label for=\\\"nominParents\\\">--no-min-parents</label></div>\\n                            </div> \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #nomaxParents type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"nomaxParents\\\" id=\\\"nomaxParents\\\" (change)=\\\"nomaxParentsCheckbox(nomaxParents.checked)\\\"><label for=\\\"nomaxParents\\\">--no-max-parents</label></div>\\n                            </div>  \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #firstParent type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"firstParent\\\" id=\\\"firstParent\\\" (change)=\\\"firstParentCheckbox(firstParent.checked)\\\"><label for=\\\"firstParent\\\">--first-parent</label></div>\\n                            </div> \\n                            \\n                        </div>\\n                        <div class=\\\"form-row\\\">  \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #all type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"all\\\" id=\\\"all\\\" (change)=\\\"allCheckbox(all.checked)\\\"><label for=\\\"all\\\">--all</label></div>\\n                            </div>  \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #reflog type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"reflog\\\" id=\\\"reflog\\\" (change)=\\\"reflogCheckbox(reflog.checked)\\\"><label for=\\\"reflog\\\">--reflog</label></div>\\n                            </div> \\n                            <div class=\\\"col form-group\\\">                                \\n                                <div class=\\\"icheck-primary\\\"><input #alternateRefs type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"alternateRefs\\\" id=\\\"alternateRefs\\\" (change)=\\\"alternateRefsCheckbox(alternateRefs.checked)\\\"><label for=\\\"alternateRefs\\\">--alternate-refs</label></div>\\n                            </div> \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #singleworktree type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"singleworktree\\\" id=\\\"singleworktree\\\" (change)=\\\"singleworktreeCheckbox(singleworktree.checked)\\\"><label for=\\\"singleworktree\\\">--single-worktree</label></div>\\n                            </div>  \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #ignoremissing type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"ignoremissing\\\" id=\\\"ignoremissing\\\" (change)=\\\"ignoremissingCheckbox(ignoremissing.checked)\\\"><label for=\\\"ignoremissing\\\">--ignore-missing</label></div>\\n                            </div> \\n                            <div class=\\\"col form-group\\\">\\n                                <div class=\\\"icheck-primary\\\"><input #boundary type=\\\"checkbox\\\" [checked]=\\\"false\\\" formControlName=\\\"boundary\\\" id=\\\"boundary\\\" (change)=\\\"boundaryCheckbox(boundary.checked)\\\"><label for=\\\"boundary\\\">--boundary</label></div>\\n                            </div> \\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Optional Paramareters (i.e. --date=short --pretty=format:--%h--%ad--%aN)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"optionalParams\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"optionalParams\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.optionalParams.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.optionalParams.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.optionalParams.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n                        \\n                        \\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<!-- ========== FOOTER ========== -->\\n<footer class=\\\"mt-10\\\">\\n    <!-- Footer-newsletter -->\\n    <div class=\\\"bg-primary py-3\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row align-items-center\\\">\\n                <div class=\\\"col-lg-7 mb-md-3 mb-lg-0\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <div class=\\\"col-auto flex-horizontal-center\\\">\\n                            <i class=\\\"ec ec-newsletter \\\" style=\\\"font-size:2.12525rem;\\\"></i>\\n                            <h2 class=\\\"font-size-20 mb-0 ml-3\\\">Sign up to Newsletter</h2>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-5\\\">\\n                    <!-- Subscribe Form -->\\n                    <form class=\\\"js-validate js-form-message\\\">\\n                        <label class=\\\"sr-only\\\" for=\\\"subscribeSrEmail\\\">Email address</label>\\n                        <div class=\\\"input-group input-group-pill\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control border-0 height-40\\\" name=\\\"email\\\" id=\\\"subscribeSrEmail\\\" placeholder=\\\"Email address\\\" aria-label=\\\"Email address\\\" aria-describedby=\\\"subscribeButton\\\" required\\n                            data-msg=\\\"Please enter a valid email address.\\\">\\n                            <div class=\\\"input-group-append\\\">\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-dark btn-sm-wide height-40 py-2\\\" id=\\\"subscribeButton\\\">Sign Up</button>\\n                            </div>\\n                        </div>\\n                    </form>\\n                    <!-- End Subscribe Form -->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- End Footer-newsletter -->\\n    <!-- Footer-bottom-widgets -->\\n    <div class=\\\"pt-8 pb-4 bg-gray-13\\\">\\n        <div class=\\\"container mt-1\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-5\\\">\\n                    <div class=\\\"my-4 my-md-4\\\">\\n                        <ul class=\\\"list-inline mb-0 opacity-7\\\">\\n                            <li class=\\\"list-inline-item mr-0\\\">\\n                                <a class=\\\"btn font-size-20 btn-icon btn-soft-dark btn-bg-transparent rounded-circle\\\" href=\\\"#\\\">\\n                                    <span class=\\\"fab fa-facebook-f btn-icon__inner\\\"></span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"list-inline-item mr-0\\\">\\n                                <a class=\\\"btn font-size-20 btn-icon btn-soft-dark btn-bg-transparent rounded-circle\\\" href=\\\"#\\\">\\n                                    <span class=\\\"fab fa-google btn-icon__inner\\\"></span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"list-inline-item mr-0\\\">\\n                                <a class=\\\"btn font-size-20 btn-icon btn-soft-dark btn-bg-transparent rounded-circle\\\" href=\\\"#\\\">\\n                                    <span class=\\\"fab fa-twitter btn-icon__inner\\\"></span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"list-inline-item mr-0\\\">\\n                                <a class=\\\"btn font-size-20 btn-icon btn-soft-dark btn-bg-transparent rounded-circle\\\" href=\\\"#\\\">\\n                                    <span class=\\\"fab fa-github btn-icon__inner\\\"></span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-7\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12 col-md mb-4 mb-md-0\\\">\\n                            <!-- <h6 class=\\\"mb-3 font-weight-bold\\\">Find Links</h6> -->\\n                            <!-- List Group -->\\n                            <!-- <ul class=\\\"list-group list-group-flush list-group-borderless mb-0 list-group-transparent\\\">\\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">Datasets</a></li>\\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">Tools</a></li>\\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">Resources</a></li>\\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">Research</a></li>\\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">Sain Team</a></li>\\n                            </ul> -->\\n                            <!-- End List Group -->\\n                        </div>\\n\\n                        <div class=\\\"col-12 col-md mb-4 mb-md-0\\\">    \\n                            <h6 class=\\\"mb-3 font-weight-bold\\\">Find Links</h6>                       \\n                            <!-- List Group -->\\n                            <ul class=\\\"list-group list-group-flush list-group-borderless mb-0 list-group-transparent\\\">                                \\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"http://sain.usc.edu/\\\">Website</a></li>\\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">Contributors</a></li>\\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">Sponsors</a></li>\\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">Universities</a></li>                                \\n                            </ul>\\n                            <!-- End List Group -->\\n                        </div>\\n\\n                        <div class=\\\"col-12 col-md mb-4 mb-md-0\\\">\\n                            <h6 class=\\\"mb-3 font-weight-bold\\\">User Links</h6>\\n                            <!-- List Group -->\\n                            <ul class=\\\"list-group list-group-flush list-group-borderless mb-0 list-group-transparent\\\">\\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">My Account</a></li>                                \\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">Articles and Blogs</a></li>\\n                                <li><a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#\\\">FAQs</a></li>\\n                            </ul>\\n                            <!-- End List Group -->\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- End Footer-bottom-widgets -->\\n    <!-- Footer-copy-right -->\\n    <div class=\\\"bg-gray-14 py-2\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"flex-center-between d-block d-md-flex\\\">\\n                <div class=\\\"mb-3 mb-md-0\\\">© <a href=\\\"#\\\" class=\\\"font-weight-bold text-gray-90\\\">Sain</a> - All rights Reserved</div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- End Footer-copy-right -->\\n</footer>\\n\"","export default \"<div id=\\\"app\\\" class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-transparent\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img src=\\\"assets/img/logo.png\\\" class=\\\"logo\\\"></a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div id=\\\"navbarNavDropdown\\\" class=\\\"navbar-collapse collapse\\\">\\n          <ul class=\\\"navbar-nav mr-auto\\\">\\n              <li class=\\\"nav-item\\\">\\n                  <a class=\\\"nav-link nav-link-local pl-2\\\" routerLink=\\\"/componentslist\\\">SAIN Components </a>\\n              </li>            \\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link nav-link-local pl-2\\\" routerLink=\\\"/contactus\\\">Contact Us</a>\\n              </li>\\n          </ul>\\n\\n        \\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          \\n          <li class=\\\"nav-item\\\" *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a class=\\\"nav-link nav-link-local \\\" routerLink=\\\"/register\\\"><i class=\\\"fa fa-fw fa-user\\\"></i>Register</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a class=\\\"nav-link nav-link-local \\\" routerLink=\\\"/login\\\">Sign In</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"auth.isLoggedIn()\\\">\\n            <a class=\\\"nav-link nav-link-local \\\" routerLink=\\\"/profile\\\"><i class=\\\"fa fa-fw fa-user\\\"></i>{{ auth.getUserDetails()?.firstname }}</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"auth.isLoggedIn()\\\">\\n            <a class=\\\"nav-link nav-link-local \\\" routerLink=\\\"\\\" (click)=\\\"auth.logout()\\\">log out</a>\\n          </li>\\n        </ul>\\n      </div>\\n  </nav>\\n</div>\\n\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-primary min-height-45  py-0\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div style=\\\"font-weight:bold;text-align:center;font-size:18px;\\\">SAIN Microservices Docker Distribution</div>\\r\\n           \\r\\n    </div>\\r\\n</nav>\"","export default \"\\n        <app-header-one></app-header-one>\\n        <app-header-two></app-header-two>\\n\"","export default \"<app-header></app-header>\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Linux Text Stream Editor</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">                    \\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">                       \\n                        \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">(Input) Input File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.inputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputFile.errors.required\\\">Required field!</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Sed Command<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"sedCommand\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"sedCommand\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.sedCommand.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.sedCommand.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.sedCommand.errors.required\\\">Required field!</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Extended Regular Expression<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"extendedRegex\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"extendedRegex\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.extendedRegex.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.extendedRegex.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.extendedRegex.errors.required\\\">Required field!</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Sed Script File<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"sedCommandFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"sedCommandFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.sedCommandFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.sedCommandFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.sedCommandFile.errors.required\\\">Required field!</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Mallet hlda</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Input File<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.inputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputFile.errors.required\\\">Required topic model input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prefix code ('JAVA CODE')<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"prefixCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prefixCode\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.prefixCode.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.prefixCode.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.prefixCode.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Testing File: from which to read the list of instances for held-out likelihood calculation<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"testingFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"testingFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.testingFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.testingFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.testingFile.errors.required\\\">Required field!</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Output State Interval: number of iterations between writing the sampling state to a text file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputStateInterval\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputStateInterval\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputStateInterval.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputStateInterval.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputStateInterval.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Random Seed<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"randomSeed\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"randomSeed\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.randomSeed.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.randomSeed.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.randomSeed.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>   \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Show Progress (default is true)<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"showProgress\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.showProgress.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Show Topics Interval (number of iterations between printing a brief summary of the topics so far)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"showTopicsInterval\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"showTopicsInterval\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.showTopicsInterval.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.showTopicsInterval.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.showTopicsInterval.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Number of top (most probable) words for each topic (default is 20))<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"numtopwords\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"numtopwords\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.numtopwords.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.numtopwords.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.numtopwords.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                   -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Num Levels: The number of levels in the tree<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"numLevels\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"numLevels\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.numLevels.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.numLevels.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.numLevels.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                   -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Alpha parameter: smoothing over topic distribution<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"alpha\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"alpha\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.alpha.errors}\\\">\\n                                <!-- <div *ngIf=\\\"submitted && f.alpha.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.alpha.errors.required\\\">Required field!</div>\\n                                </div>                             -->\\n                            </div>\\n                        </div>     \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Gamma parameter: smoothing over topic distribution<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"gamma\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"gamma\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.gamma.errors}\\\">\\n                                <!-- <div *ngIf=\\\"submitted && f.gamma.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.gamma.errors.required\\\">Required field!</div>\\n                                </div>                             -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Eta parameter: smoothing over topic-word distributions<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"eta\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"eta\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.eta.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.eta.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.eta.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Mallet Import Dir</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Source Dir Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"srcDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"srcDir\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.srcDir.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.srcDir.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.srcDir.errors.required\\\">Required source dir input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n                       \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">(Output) Output File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputFile.errors}\\\">\\n                                <!-- <label class=\\\"custom-file-label\\\" for=\\\"dsmfiles\\\">{{structurl_DSM}}</label> -->\\n                                <div *ngIf=\\\"submitted && f.outputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputFile.errors.required\\\">Required output location</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Remove topwords - remove default list of common English \\\"stop words\\\" from text<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"removeStopwords\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.removeStopwords.errors}\\\" >\\n                                    <option>TRUE</option>\\n                                    <option>FALSE</option>                                   \\n                                </select>\\n                                <!-- <div *ngIf=\\\"submitted && f.removeStopwords.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"submitted && f.removeStopwords.errors\\\">Log Type is required</div>\\n                                </div> -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Keep Sequence - final data will be a FeatureSequenceWithBigrams rather than a FeatureVector<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"keepSequence\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.keepSequence.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>\\n                                <!-- <div *ngIf=\\\"submitted && f.keepSequence.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"submitted && f.keepSequence.errors\\\">Log Type is required</div>\\n                                </div> -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prefix code ('JAVA CODE')<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"prefixCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prefixCode\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.prefixCode.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.prefixCode.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.prefixCode.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                         <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Preserve Case<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"preserveCase\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.preserveCase.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Use Pipe from File<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"usePipefromFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"usePipefromFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.usePipefromFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.usePipefromFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.usePipefromFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Stoplist File<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"stoplistFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"stoplistFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.stoplistFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.stoplistFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.stoplistFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Extra Stopwords<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"extraStopwords\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"extraStopwords\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.extraStopwords.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.extraStopwords.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.extraStopwords.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Skip Header<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"skipHeader\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.skipHeader.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>\\n                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Skip html<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"skipHtml\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.skipHtml.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>\\n                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Binary Features<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"binaryFeatures\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.binaryFeatures.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>\\n                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Gram Size<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"gramSizes\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"gramSizes\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.gramSizes.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.gramSizes.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.gramSizes.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Binary Features<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"keepSequenceBigrams\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.keepSequenceBigrams.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>\\n                               \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Save Text in Source<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"saveTextinSource\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.saveTextinSource.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>\\n                               \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">String Pipe<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"stringPipe\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"stringPipe\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.stringPipe.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.stringPipe.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.stringPipe.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Token Pipe<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"tokenPipe\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"tokenPipe\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.tokenPipe.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.tokenPipe.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.tokenPipe.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Fv-Pipe<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"fvPipe\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fvPipe\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.fvPipe.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.fvPipe.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.fvPipe.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Encoding<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"encoding\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"encoding\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.encoding.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.encoding.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.encoding.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">     \\n                                <!-- <label class=\\\"form-label\\\">Token-regex - Example: \\\"[\\\\p{L}\\\\p{N}_]+|[\\\\p{P}]+\\\" (unicode letters, numbers and underscore OR all punctuation)<span class=\\\"text-danger\\\">:</span></label>                            -->\\n                                <label class=\\\"form-label\\\">Token-regex<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"tokenRegex\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"tokenRegex\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.tokenRegex.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.tokenRegex.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.tokenRegex.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Print Output<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"printOutput\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.printOutput.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>\\n                                \\n                            </div>\\n                        </div> \\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Mallet Import File</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Input File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.inputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputFile.errors.required\\\">Required source dir input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n                       \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">(Output) Output File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputFile.errors}\\\">\\n                                <!-- <label class=\\\"custom-file-label\\\" for=\\\"dsmfiles\\\">{{structurl_DSM}}</label> -->\\n                                <div *ngIf=\\\"submitted && f.outputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputFile.errors.required\\\">Required output location</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Remove topwords - remove default list of common English \\\"stop words\\\" from text<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"removeStopwords\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.removeStopwords.errors}\\\" >\\n                                    <option>TRUE</option>\\n                                    <option>FALSE</option>                                   \\n                                </select>\\n                                <!-- <div *ngIf=\\\"submitted && f.removeStopwords.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"submitted && f.removeStopwords.errors\\\">Log Type is required</div>\\n                                </div> -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Keep Sequence - final data will be a FeatureSequenceWithBigrams rather than a FeatureVector<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"keepSequence\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.keepSequence.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>\\n                                <!-- <div *ngIf=\\\"submitted && f.keepSequence.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"submitted && f.keepSequence.errors\\\">Log Type is required</div>\\n                                </div> -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prefix code ('JAVA CODE')<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"prefixCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prefixCode\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.prefixCode.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.prefixCode.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.prefixCode.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Line-Regex: Regular expression containing regex-groups for label, name and data<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"lineRegex\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lineRegex\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.lineRegex.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.lineRegex.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.lineRegex.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Label: The index of the group containing the label string<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"label\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"label\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.label.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.label.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.label.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Name: The index of the group containing the instance name<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.name.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Data: The index of the group containing the data<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"data\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"data\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.data.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.data.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.data.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                         <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Preserve Case<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"preserveCase\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.preserveCase.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Use Pipe from File<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"usePipefromFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"usePipefromFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.usePipefromFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.usePipefromFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.usePipefromFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Stoplist File<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"stoplistFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"stoplistFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.stoplistFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.stoplistFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.stoplistFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Extra Stopwords<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"extraStopwords\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"extraStopwords\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.extraStopwords.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.extraStopwords.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.extraStopwords.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Binary Features<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"keepSequenceBigrams\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.keepSequenceBigrams.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>\\n                               \\n                            </div>\\n                        </div>        \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Encoding<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"encoding\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"encoding\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.encoding.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.encoding.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.encoding.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">     \\n                                <!-- <label class=\\\"form-label\\\">Token-regex - Example: \\\"[\\\\p{L}\\\\p{N}_]+|[\\\\p{P}]+\\\" (unicode letters, numbers and underscore OR all punctuation)<span class=\\\"text-danger\\\">:</span></label>                            -->\\n                                <label class=\\\"form-label\\\">Token-regex<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"tokenRegex\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"tokenRegex\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.tokenRegex.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.tokenRegex.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.tokenRegex.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Print Output<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"printOutput\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.printOutput.errors}\\\" >\\n                                    <option>TRUE</option> \\n                                    <option>FALSE</option>   \\n                                </select>\\n                                \\n                            </div>\\n                        </div> \\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Mallet Infer Topics</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Input File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.inputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputFile.errors.required\\\">Required topic model input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Inferencer File Name Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inferencerFilename\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inferencerFilename\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inferencerFilename.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.inferencerFilename.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inferencerFilename.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">(Output) Doc Topics File: The file in which to write the topic proportions per document, at the end of the iterations<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputDocTopics\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputDocTopics\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputDocTopics.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputDocTopics.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputDocTopics.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prefix code ('JAVA CODE')<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"prefixCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prefixCode\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.prefixCode.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.prefixCode.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.prefixCode.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Doc topics proportions threshold/lower boundaries (default is 0.0)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"doctopicsThreshold\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"doctopicsThreshold\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.doctopicsThreshold.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.doctopicsThreshold.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.doctopicsThreshold.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                   -->\\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Doc Topics Max<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"docTopicsMax\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"docTopicsMax\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.docTopicsMax.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.docTopicsMax.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.docTopicsMax.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>    \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Number of Iterations (default is 1000)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"numIterations\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"numIterations\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.numIterations.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.numIterations.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.numIterations.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                   -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Sample Interval: The number of iterations between saved samples (default is 10)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"sampleInterval\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"sampleInterval\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.sampleInterval.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.sampleInterval.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.sampleInterval.errors.required\\\">Required inferencer filename</div>\\n                                </div>-->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Burn In: The number of iterations before the first sample is saved (default is 10)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"burnIn\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"burnIn\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.burnIn.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.burnIn.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.burnIn.errors.required\\\">Required inferencer filename</div>\\n                                </div>-->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Random Seed<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"randomSeed\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"randomSeed\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.randomSeed.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.randomSeed.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.randomSeed.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>     \\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Mallet Prune</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Input File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.inputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputFile.errors.required\\\">Required topic model input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Output) Output File Name Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.outputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputFile.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prefix code ('JAVA CODE')<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"prefixCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prefixCode\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.prefixCode.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.prefixCode.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.prefixCode.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Training Portion: The fraction of the instances that should be used for training<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"trainingPortion\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"trainingPortion\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.trainingPortion.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.trainingPortion.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.trainingPortion.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Validation Portion: The fraction of the instances that should be used for validation<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"validationPortion\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"validationPortion\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.validationPortion.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.validationPortion.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.validationPortion.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Random Seed<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"randomSeed\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"randomSeed\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.randomSeed.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.randomSeed.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.randomSeed.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Training File: Read the training set instance list from this file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"trainingFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"trainingFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.trainingFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.trainingFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.trainingFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Testing File: Read the test set instance list to this file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"testingFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"testingFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.testingFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.testingFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.testingFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Validation File: Read the validation set instance list to this file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"validationFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"validationFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.validationFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.validationFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.validationFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prune Infogain N: Reduce features to the top N by information gain<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"pruneInfogain\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pruneInfogain\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.pruneInfogain.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.pruneInfogain.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.pruneInfogain.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prune Count N: Reduce features to those that occur more than N times<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"pruneInfogain\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pruneInfogain\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.pruneInfogain.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.pruneInfogain.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.pruneInfogain.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Vector To Sequence: Convert FeatureVector's to FeatureSequence's<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"vectorToSequence\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.vectorToSequence.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Hide Targets<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"hideTargets\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.hideTargets.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Reveal Targets<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"revealTargets\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.revealTargets.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Mallet Split</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Input File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.inputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputFile.errors.required\\\">Required topic model input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Output) Output File Name Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.outputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputFile.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prefix code ('JAVA CODE')<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"prefixCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prefixCode\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.prefixCode.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.prefixCode.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.prefixCode.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Training Portion: The fraction of the instances that should be used for training<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"trainingPortion\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"trainingPortion\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.trainingPortion.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.trainingPortion.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.trainingPortion.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Validation Portion: The fraction of the instances that should be used for validation<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"validationPortion\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"validationPortion\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.validationPortion.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.validationPortion.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.validationPortion.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Random Seed<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"randomSeed\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"randomSeed\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.randomSeed.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.randomSeed.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.randomSeed.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Training File: Read the training set instance list from this file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"trainingFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"trainingFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.trainingFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.trainingFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.trainingFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Testing File: Read the test set instance list to this file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"testingFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"testingFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.testingFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.testingFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.testingFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Validation File: Read the validation set instance list to this file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"validationFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"validationFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.validationFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.validationFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.validationFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prune Infogain N: Reduce features to the top N by information gain<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"pruneInfogain\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pruneInfogain\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.pruneInfogain.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.pruneInfogain.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.pruneInfogain.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prune Count N: Reduce features to those that occur more than N times<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"pruneInfogain\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pruneInfogain\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.pruneInfogain.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.pruneInfogain.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.pruneInfogain.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Vector To Sequence: Convert FeatureVector's to FeatureSequence's<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"vectorToSequence\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.vectorToSequence.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Hide Targets<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"hideTargets\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.hideTargets.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Reveal Targets<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"revealTargets\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.revealTargets.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n                        \\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Mallet Train Classifier</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Input File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.inputFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputFile.errors.required\\\">Required topic model input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Output) Output Classifier File Name Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputClassifier\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputClassifier\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputClassifier.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.outputClassifier.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputClassifier.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Report<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"report\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"report\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.report.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.report.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.report.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">ClassifierTrainer constructor: Java code for the constructor used to create a ClassifierTrainer<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"trainer\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"trainer\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.trainer.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.trainer.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.trainer.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Training Portion: The fraction of the instances that should be used for training<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"trainingPortion\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"trainingPortion\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.trainingPortion.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.trainingPortion.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.trainingPortion.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Validation Portion: The fraction of the instances that should be used for validation<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"validationPortion\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"validationPortion\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.validationPortion.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.validationPortion.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.validationPortion.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Unlabeled Portion: The fraction of the training instances that should have their labels hidden<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"unlabeledPortion\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"unlabeledPortion\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.unlabeledPortionerrors}\\\">\\n                                <div *ngIf=\\\"submitted && f.unlabeledPortion.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.unlabeledPortion.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Random Seed<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"randomSeed\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"randomSeed\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.randomSeed.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.randomSeed.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.randomSeed.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>    \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Num Trials: The number of random train/test splits to perform<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"numTrials\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"numTrials\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.numTrials.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.numTrials.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.numTrials.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Classifier Evaluator: Java code for constructing a ClassifierEvaluating object<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"classifierEvaluator\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"classifierEvaluator\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.classifierEvaluator.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.classifierEvaluator.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.classifierEvaluator.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Verbosity: The level of messages to print: 0 is silent, 8 is most verbose. <br>Levels 0-8 correspond to the java.logger predefined levels off, severe, warning, info, config, fine, finer, finest, all. <br>The default value is taken from the mallet logging.properties file, which currently defaults to INFO level (3)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"verbosity\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"verbosity\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.verbosity.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.verbosity.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.verbosity.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">No Overwrite Progress Message: Suppress writing-in-place on terminal for progess messages <br>- repetitive messages of which only the latest is generally of interest<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"noOverwriteProgressMessages\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.noOverwriteProgressMessages.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Cross Validation: The number of folds for cross-validation (DEFAULT=0)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"crossValidation\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"crossValidation\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.crossValidation.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.crossValidation.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.crossValidation.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Training File: Read the training set instance list from this file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"trainingFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"trainingFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.trainingFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.trainingFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.trainingFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Testing File: Read the test set instance list to this file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"testingFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"testingFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.testingFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.testingFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.testingFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Validation File: Read the validation set instance list to this file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"validationFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"validationFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.validationFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.validationFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.validationFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container py-8\\\">\\n    <div class=\\\"card border-dark mb-3\\\">\\n        <div class=\\\"card-header text-center bg-gray-3  py-0\\\" style=\\\"font-family:Georgia, 'Times New Roman', Times, serif\\\"> \\n            <h4 class=\\\"card-title mt-2\\\">Mallet Train Topics</h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!auth.isLoggedIn()\\\">\\n            <a style=\\\"font-family:Georgia, 'Times New Roman', Times, serif; color:black;\\\" routerLink=\\\"/login\\\">&nbsp;Please Sign In.</a>\\n        </div>\\n        <div *ngIf=\\\"auth.isLoggedIn()\\\"> \\n            <div class=\\\"row p-6 justify-content-center\\\" *ngIf=\\\"!results\\\">\\n                <div *ngIf=\\\"isLoading\\\" style=\\\"text-align: center;\\\">\\n                    <app-loading-spinner></app-loading-spinner>\\n                </div>\\n                <div class=\\\"alert alert-warning alert-dismissible fade show\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\n                    <strong>Error!</strong> {{ error }}\\n                </div>\\n                <div *ngIf=\\\"!isLoading && !submitted\\\"  class=\\\"col-md-12 p-4\\\">\\n                    <form  [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Input) Topic Model File Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"topicmodelFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"topicmodelFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.topicmodelFile.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.topicmodelFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.topicmodelFile.errors.required\\\">Required topic model input</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">(Output) Inferencer File Name Path<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inferencerFilename\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inferencerFilename\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inferencerFilename.errors}\\\">                                \\n                                <div *ngIf=\\\"submitted && f.inferencerFilename.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inferencerFilename.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                  \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Number of topics to fit (default is -1)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"numTopics\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"numTopics\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.numTopics.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.numTopics.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.numTopics.errors.required\\\">Required Num topics param</div>\\n                                </div>                                   -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Number of top (most probable) words for each topic (default is 20))<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"numtopwords\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"numtopwords\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.numtopwords.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.numtopwords.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.numtopwords.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                   -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Number of threads for parallel training (default is 1))<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"numThreads\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"numThreads\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.numThreads.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.numThreads.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.numThreads.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                   -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Number of Iterations (default is 1000)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"numIterations\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"numIterations\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.numIterations.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.numIterations.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.numIterations.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                   -->\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                               \\n                               <label class=\\\"form-label\\\">Doc topics proportions threshold/lower boundaries (default is 0.0)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"doctopicsThreshold\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"doctopicsThreshold\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.doctopicsThreshold.errors}\\\">                                \\n                                <!-- <div *ngIf=\\\"submitted && f.doctopicsThreshold.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.doctopicsThreshold.errors.required\\\">Required inferencer filename</div>\\n                                </div>                                   -->\\n                            </div>\\n                        </div> \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Prefix code ('JAVA CODE')<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"prefixCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"prefixCode\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.prefixCode.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.prefixCode.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.prefixCode.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Doc Topics Max<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"docTopicsMax\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"docTopicsMax\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.docTopicsMax.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.docTopicsMax.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.docTopicsMax.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>    \\n                        \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Random Seed<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"randomSeed\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"randomSeed\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.randomSeed.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.randomSeed.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.randomSeed.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>                         \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Use PAM (Pachinko Allocation Model) rather than LDA by default<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"usePam\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.usePam.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Use N-Grams (Rather than using LDA, use Topical-N-Grams)<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"useNgrams\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.useNgrams.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">\\n                                <label class=\\\"form-label\\\">Use Symmetric Alpha: Only optimize the concentration parameter of the prior over document-topic distributions<span class=\\\"text-danger\\\">:</span></label>                               \\n                                <select formControlName=\\\"useSymmetricAlpha\\\" id=\\\"inputState\\\" class=\\\"form-control\\\"\\n                                [ngClass]=\\\"{'is-invalid': submitted && f.useSymmetricAlpha.errors}\\\" >\\n                                    <option>true</option> \\n                                    <option>false</option>   \\n                                </select>                                \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Show Topics Interval (number of iterations between printing a brief summary of the topics so far)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"showTopicsInterval\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"showTopicsInterval\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.showTopicsInterval.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.showTopicsInterval.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.showTopicsInterval.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Output Model Interval<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputModelInterval\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputModelInterval\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputModelInterval.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputModelInterval.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputModelInterval.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Output State Interval: number of iterations between writing the sampling state to a text file<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputStateInterval\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputStateInterval\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputStateInterval.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputStateInterval.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputStateInterval.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Optimize Interval: number of iterations between reestimating dirichlet hyperparameters<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"optimizeInterval\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"optimizeInterval\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.optimizeInterval.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.optimizeInterval.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.optimizeInterval.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Optimize Burn In: number of iterations to run before first estimating dirichlet hyperparameters<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"optimizeBurnin\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"optimizeBurnin\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.optimizeBurnin.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.optimizeBurnin.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.optimizeBurnin.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>                        \\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Alpha parameter: smoothing over topic distribution<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"alpha\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"alpha\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.alpha.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.alpha.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.alpha.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Beta parameter: smoothing over topic distribution<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"beta\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"beta\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.beta.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.beta.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.beta.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Gamma parameter: smoothing over topic distribution<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"gamma\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"gamma\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.gamma.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.gamma.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.gamma.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Delta parameter: smoothing over choice of unigram/bigram<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"delta\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"delta\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.delta.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.delta.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.delta.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Delta1: Topic N-gram smoothing parameter<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"delta1\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"delta1\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.delta1.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.delta1.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.delta1.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Delta2: Topic N-gram smoothing parameter<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"delta2\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"delta2\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.delta2.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.delta2.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.delta2.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">PAM Num Super-topics (When using the Pachinko Allocation Model set the number of supertopics)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"pamNumSupertopics\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pamNumSupertopics\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.pamNumSupertopics.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.pamNumSupertopics.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.pamNumSupertopics.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">PAM Num Sub-topics (When using the Pachinko Allocation Model set the number of subtopics)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"pamNumSubtopics\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pamNumSubtopics\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.pamNumSubtopics.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.pamNumSubtopics.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.pamNumSubtopics.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Language input file (for polylingual topic model)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"languageInput\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"languageInput\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.languageInput.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.languageInput.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.languageInput.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Language input file (for polylingual topic model)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"languageInput\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"languageInput\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.languageInput.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.languageInput.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.languageInput.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Testing File: The file from which to read the list of instances for empirical likelihood calculation<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"testing\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"testing\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.testing.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.testing.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.testing.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Output Model File: The file in which to write the binary topic model at the end of the iterations<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputModel\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputModel.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputModel.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputModel.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Input Model File (to read the binary topic model to which the --input will be appended, allowing incremental training)<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"inputModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"inputModel\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.inputModel.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.inputModel.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.inputModel.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Evaluator File: A held-out likelihood evaluator for new documents<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"evaluatorFilename\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"evaluatorFilename\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.evaluatorFilename.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.evaluatorFilename.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.evaluatorFilename.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Output State File: The file in which to write the Gibbs sampling state after at the end of the iterations<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputState\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputState\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputState.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputState.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputState.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Output Topic Keys File: The file in which to write the top words for each topic and any Dirichlet parameters<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputTopicKeys\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputTopicKeys\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputTopicKeys.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputTopicKeys.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputTopicKeys.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Topic Word Weights File: The file in which to write unnormalized weights for every topic and word type<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"topicWordWeightsFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"topicWordWeightsFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.topicWordWeightsFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.topicWordWeightsFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.topicWordWeightsFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Word Topic Counts File: The file in which to write a sparse representation of topic-word assignments<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"wordTopicCountsFile\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"wordTopicCountsFile\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.wordTopicCountsFile.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.wordTopicCountsFile.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.wordTopicCountsFile.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Xml Topic Report File: The file in which to write the top words for each topic and any Dirichlet parameters in XML format<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"xmlTopicReport\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"xmlTopicReport\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.xmlTopicReport.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.xmlTopicReport.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.xmlTopicReport.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Xml Topic Phrase Report File: The file in which to write the top words and phrases for each topic and any Dirichlet parameters in XML format<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"xmlTopicPhraseReport\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"xmlTopicPhraseReport\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.xmlTopicPhraseReport.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.xmlTopicPhraseReport.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.xmlTopicPhraseReport.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col form-group\\\">                                \\n                                <label class=\\\"form-label\\\">Output Doc Topics File: The file in which to write the topic proportions per document, at the end of the iterations<span class=\\\"text-danger\\\">:</span></label>\\n                                <input name=\\\"outputDocTopics\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"outputDocTopics\\\" [ngClass]=\\\"{ 'is-invalid': submitted &&  f.outputDocTopics.errors}\\\">\\n                                <div *ngIf=\\\"submitted && f.outputDocTopics.errors\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"f.outputDocTopics.errors.required\\\">Required field!</div>\\n                                </div>                            \\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <hr>\\n                        <div class=\\\"form-group mt-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary-dark-w min-width-200\\\"> Submit  </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200\\\"> Cancel  </button>\\n                        </div> <!-- form-group// --> \\n                    </form>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row py-18 px-0 justify-content-center m-2\\\"  *ngIf=\\\"results\\\">\\n                <div class=\\\"col-md-8 bg-gray-3 py-3\\\"> \\n                    <strong>Success! {{ results }}</strong>\\n                </div>\\n                <!-- <div class=\\\"col-md-4 \\\"> \\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary-dark-w float-right min-width-200 min-height-40\\\" (click)=\\\"downloadResults()\\\"><i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i> Downlod Results </button>\\n                </div> -->\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\\n\"","export default \"<div class=\\\"lds-ring\\\"><div></div><div></div><div></div><div></div></div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './home/account/login/login.component';\nimport { RegisterComponent } from './home/account/register/register.component';\nimport { ContactUsComponent } from './home/contact-us/contact-us.component';\nimport { ArcadeDepsBuilderComponent } from './home/arcade/arcade-depsbuilder/arcade-depsbuilder.component';\nimport { ComponentsListComponent } from './home/components-list/components-list.component';\nimport { ArcadeAcdcComponent } from './home/arcade/arcade-acdc/arcade-acdc.component';\nimport { ArcadeArchsmelldetectorComponent } from './home/arcade/arcade-archsmelldetector/arcade-archsmelldetector.component';\nimport { ArcadePkgComponent } from './home/arcade/arcade-pkg/arcade-pkg.component';\nimport { ArcadeA2aComponent } from './home/arcade/arcade-a2a/arcade-a2a.component';\nimport { ArcadeCvgComponent } from './home/arcade/arcade-cvg/arcade-cvg.component';\nimport { ArcadeC2caverageanalyzeComponent } from './home/arcade/arcade-c2caverageanalyze/arcade-c2caverageanalyze.component';\nimport { ArcadeDecaymetricsComponent } from './home/arcade/arcade-decaymetrics/arcade-decaymetrics.component';\nimport { ArcadeSmelldensitianalyzerComponent } from './home/arcade/arcade-smelldensitianalyzer/arcade-smelldensitianalyzer.component';\nimport { ArcadeSmellevolutionanalyzerComponent } from './home/arcade/arcade-smellevolutionanalyzer/arcade-smellevolutionanalyzer.component';\nimport { ArcadePipeextractorComponent } from './home/arcade/arcade-pipeextractor/arcade-pipeextractor.component';\nimport { MalletImportdirComponent } from './home/mallet/mallet-importdir/mallet-importdir.component';\nimport { MalletTraintopicsComponent } from './home/mallet/mallet-traintopics/mallet-traintopics.component';\nimport { ArcadeArcComponent } from './home/arcade/arcade-arc/arcade-arc.component';\nimport { MalletImportfileComponent } from './home/mallet/mallet-importfile/mallet-importfile.component';\nimport { MalletTrainclassifierComponent } from './home/mallet/mallet-trainclassifier/mallet-trainclassifier.component';\nimport { MalletInfertopicsComponent } from './home/mallet/mallet-infertopics/mallet-infertopics.component';\nimport { MalletHldaComponent } from './home/mallet/mallet-hlda/mallet-hlda.component';\nimport { MalletPruneComponent } from './home/mallet/mallet-prune/mallet-prune.component';\nimport { MalletSplitComponent } from './home/mallet/mallet-split/mallet-split.component';\nimport { CodemaatVcsComponent } from './home/codemaat/codemaat-vcs/codemaat-vcs.component';\nimport { GitLogComponent } from './home/git/git-log/git-log.component';\nimport { LinuxSedComponent } from './home/linux/linux-sed/linux-sed.component';\nimport { ArcadeCleanupcodemaatComponent } from './home/arcade/arcade-cleanupcodemaat/arcade-cleanupcodemaat.component';\nimport { ArcadeBatchclonefinderComponent } from './home/arcade/arcade-batchclonefinder/arcade-batchclonefinder.component';\nimport { ArcadeDepfindrunnerComponent } from './home/arcade/arcade-depfindrunner/arcade-depfindrunner.component';\nimport { ArcadeDependencyfinderprocessingComponent } from './home/arcade/arcade-dependencyfinderprocessing/arcade-dependencyfinderprocessing.component';\n\n\n\nconst routes: Routes = [\n  //-------------Home page ------------------------\n  { path: '', redirectTo: '/componentslist', pathMatch: 'full' },\n  { path: 'componentslist', component:ComponentsListComponent },  \n  { path: 'contactus', component:ContactUsComponent },\n  //-------------Account ---------------------------\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  //-------------Arcade Components ---------------------------\n  { path: 'arcade-depsbuilder', component:ArcadeDepsBuilderComponent },\n  { path: 'arcade-acdc', component:ArcadeAcdcComponent },\n  { path: 'arcade-archsmelldetector', component:ArcadeArchsmelldetectorComponent },  \n  { path: 'arcade-arc', component:ArcadeArcComponent },\n  { path: 'arcade-pkg', component:ArcadePkgComponent },  \n  { path: 'arcade-a2a', component:ArcadeA2aComponent },  \n  { path: 'arcade-cvg', component:ArcadeCvgComponent },  \n  { path: 'arcade-c2caverageanalyze', component:ArcadeC2caverageanalyzeComponent }, \n  { path: 'arcade-decaymetrics', component:ArcadeDecaymetricsComponent },\n  { path: 'arcade-smelldensityanalyzer', component:ArcadeSmelldensitianalyzerComponent },\n  { path: 'arcade-smellevolutionanalyzer', component:ArcadeSmellevolutionanalyzerComponent },\n  { path: 'arcade-pipeextractor', component:ArcadePipeextractorComponent },\n  { path: 'arcade-cleanupcodemaat', component:ArcadeCleanupcodemaatComponent },\n  { path: 'arcade-batchclonefinder', component:ArcadeBatchclonefinderComponent },\n  { path: 'arcade-depfindrunner', component:ArcadeDepfindrunnerComponent },\n  { path: 'arcade-dependencyfinderprocessing', component:ArcadeDependencyfinderprocessingComponent },\n \n  //-------------Mallet Components ---------------------------\n  { path: 'mallet-importdir', component:MalletImportdirComponent },\n  { path: 'mallet-traintopics', component:MalletTraintopicsComponent },\n  { path: 'mallet-importfile', component:MalletImportfileComponent },\n  { path: 'mallet-trainclassifier', component:MalletTrainclassifierComponent },\n  { path: 'mallet-infertopics', component:MalletInfertopicsComponent },\n  { path: 'mallet-hlda', component:MalletHldaComponent },\n  { path: 'mallet-prune', component:MalletPruneComponent },\n  { path: 'mallet-split', component:MalletSplitComponent },\n\n  //-------------CodeMaat Components ---------------------------\n  { path: 'codemaat-vcs', component:CodemaatVcsComponent },\n\n  //-------------Git Components ---------------------------\n  { path: 'git-log', component:GitLogComponent },\n\n  //-------------Linux Components ---------------------------\n  { path: 'linux-sed', component:LinuxSedComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi8uLi9hcHAuY29tcG9uZW50LmNzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Sain';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { DataTablesModule } from 'angular-datatables';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './home/header/header.component';\nimport { HeaderOneComponent } from './home/header/header-one/header-one.component';\nimport { HeaderTwoComponent } from './home/header/header-two/header-two.component';\nimport { AccountComponent } from './home/account/account.component';\nimport { LoginComponent } from './home/account/login/login.component';\nimport { RegisterComponent } from './home/account/register/register.component';\nimport { ContactUsComponent } from './home/contact-us/contact-us.component';\nimport { ArcadeDepsBuilderComponent } from './home/arcade/arcade-depsbuilder/arcade-depsbuilder.component';\nimport { AuthenticationService } from './authentication.service'\nimport {AuthGuardService} from './auth-guard.service';\nimport { LoadingSpinnerComponent } from './shared/loading-spinner/loading-spinner.component';\nimport { FooterComponent } from './home/header/footer/footer.component';\nimport { ArcadeAcdcComponent } from './home/arcade/arcade-acdc/arcade-acdc.component';\nimport { ComponentsListComponent } from './home/components-list/components-list.component';\nimport { ArcadeArchsmelldetectorComponent } from './home/arcade/arcade-archsmelldetector/arcade-archsmelldetector.component';\nimport { ArcadePkgComponent } from './home/arcade/arcade-pkg/arcade-pkg.component';\nimport { ArcadeA2aComponent } from './home/arcade/arcade-a2a/arcade-a2a.component';\nimport { ArcadeCvgComponent } from './home/arcade/arcade-cvg/arcade-cvg.component';\nimport { ArcadeC2caverageanalyzeComponent } from './home/arcade/arcade-c2caverageanalyze/arcade-c2caverageanalyze.component';\nimport { ArcadeDecaymetricsComponent } from './home/arcade/arcade-decaymetrics/arcade-decaymetrics.component';\nimport { ArcadeSmelldensitianalyzerComponent } from './home/arcade/arcade-smelldensitianalyzer/arcade-smelldensitianalyzer.component';\nimport { ArcadeSmellevolutionanalyzerComponent } from './home/arcade/arcade-smellevolutionanalyzer/arcade-smellevolutionanalyzer.component';\nimport { ArcadePipeextractorComponent } from './home/arcade/arcade-pipeextractor/arcade-pipeextractor.component';\nimport { MalletImportdirComponent } from './home/mallet/mallet-importdir/mallet-importdir.component';\nimport { MalletTraintopicsComponent } from './home/mallet/mallet-traintopics/mallet-traintopics.component';\nimport { ArcadeArcComponent } from './home/arcade/arcade-arc/arcade-arc.component';\nimport { MalletImportfileComponent } from './home/mallet/mallet-importfile/mallet-importfile.component';\nimport { MalletTrainclassifierComponent } from './home/mallet/mallet-trainclassifier/mallet-trainclassifier.component';\nimport { MalletInfertopicsComponent } from './home/mallet/mallet-infertopics/mallet-infertopics.component';\nimport { MalletHldaComponent } from './home/mallet/mallet-hlda/mallet-hlda.component';\nimport { MalletPruneComponent } from './home/mallet/mallet-prune/mallet-prune.component';\nimport { MalletSplitComponent } from './home/mallet/mallet-split/mallet-split.component';\nimport { CodemaatVcsComponent } from './home/codemaat/codemaat-vcs/codemaat-vcs.component';\nimport { GitLogComponent } from './home/git/git-log/git-log.component';\nimport { LinuxSedComponent } from './home/linux/linux-sed/linux-sed.component';\nimport { ArcadeCleanupcodemaatComponent } from './home/arcade/arcade-cleanupcodemaat/arcade-cleanupcodemaat.component';\nimport { ArcadeBatchclonefinderComponent } from './home/arcade/arcade-batchclonefinder/arcade-batchclonefinder.component';\nimport { ArcadeDepfindrunnerComponent } from './home/arcade/arcade-depfindrunner/arcade-depfindrunner.component';\nimport { ArcadeDependencyfinderprocessingComponent } from './home/arcade/arcade-dependencyfinderprocessing/arcade-dependencyfinderprocessing.component';\n\n@NgModule({\n  declarations: [    \n\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    HeaderOneComponent,\n    HeaderTwoComponent,\n    AccountComponent,\n    LoginComponent,\n    RegisterComponent,\n    ContactUsComponent,\n    ArcadeDepsBuilderComponent,\n    LoadingSpinnerComponent,\n    FooterComponent,\n    ArcadeAcdcComponent,\n    ComponentsListComponent,\n    ArcadeArchsmelldetectorComponent,\n    ArcadePkgComponent,\n    ArcadeA2aComponent,\n    ArcadeCvgComponent,\n    ArcadeC2caverageanalyzeComponent,\n    ArcadeDecaymetricsComponent,\n    ArcadeSmelldensitianalyzerComponent,\n    ArcadeSmellevolutionanalyzerComponent,\n    ArcadePipeextractorComponent,\n    MalletImportdirComponent,\n    MalletTraintopicsComponent,\n    ArcadeArcComponent,\n    MalletImportfileComponent,\n    MalletTrainclassifierComponent,\n    MalletInfertopicsComponent,\n    MalletHldaComponent,\n    MalletPruneComponent,\n    MalletSplitComponent,\n    CodemaatVcsComponent,\n    GitLogComponent,\n    LinuxSedComponent,\n    ArcadeCleanupcodemaatComponent,\n    ArcadeBatchclonefinderComponent,\n    ArcadeDepfindrunnerComponent,\n    ArcadeDependencyfinderprocessingComponent,],\n    \n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    DataTablesModule,\n  ],\n\n  providers: [AuthenticationService,AuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthenticationService } from './authentication.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n\n  constructor(public auth: AuthenticationService, public router: Router) {}\n\n  canActivate() {\n    if (!this.auth.isLoggedIn()) {\n      this.router.navigateByUrl('/')\n      return false\n    }\n    return true\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, of } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { Router } from '@angular/router'\nimport { environment } from '../environments/environment';\n\nexport interface UserDetails {\n  id: number\n  firstname: string\n  lastname: string\n  email: string\n  expire: number\n}\n\ninterface TokenResponse {\n  token: string\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private token: string\n\n  constructor(public http: HttpClient, public router: Router) { }\n\n  private saveToken(token: string): void {\n    localStorage.setItem('usertoken', token)\n    this.token = token\n  }\n\n  public testConnection():Observable<any>{    \n    return this.http.get(environment.auth_url + '/account'); \n  } \n\n  private getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('usertoken')\n    }\n    return this.token\n  }\n  public getUserDetails(): UserDetails {\n    const token = this.getToken()\n    \n    if (token) {\n      let payload = token.split('.')[1]\n      payload = window.atob(payload)\n      return JSON.parse(payload)\n    } \n    else {\n      return null\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails()\n    if (user)  return user.expire > Date.now() / 1000\n\n    else return false   \n  }\n\n  public register(user:any): Observable<any> {\n    return this.http.post(environment.auth_url + `/account/register`, user)\n  }\n\n  public login(user:any): Observable<any> {\n    const base = this.http.post(environment.auth_url + `/account/login`, user)\n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          this.saveToken(data.token)\n        }\n        return data\n      })\n    )\n    \n    return request\n  }\n\n  public logout(): void {\n    this.token = null\n    window.localStorage.removeItem('usertoken')\n    this.router.navigateByUrl('/login')\n  }\n\n  public handleError(errorMessage:any):string{\n    var error='Undefined error'\n    if(errorMessage.error){\n      var e=JSON.stringify(errorMessage.error)\n      error=JSON.parse(e)[\"error\"];\n    }\n    return error\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9hY2NvdW50L2FjY291bnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9hY2NvdW50L2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { AuthenticationService } from '../../../authentication.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n  error:string=null;\n  isLoading=false\n  constructor(public auth:AuthenticationService, public router: Router,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    if(this.auth.isLoggedIn()){\n      this.router.navigate(['/']);\n    }\n    this.loginForm= this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n    this.auth.testConnection().subscribe(\n      resData => {       \n      },\n      errorMessage => {\n        this.error='Could not connect to sain authentication service, please download at \\n https://hub.docker.com/repository/docker/nsfsain/sain-auth-service, start image, and set port to 3000' \n       \n      });\n  }\n\n  get f(){\n    return this.loginForm.controls;\n  }\n  login(){ \n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n    this.isLoading=true\n    this.auth.login(this.loginForm.value).subscribe(\n      resData => {\n        this.router.navigate(['/componentslist']);\n      },\n      errorMessage => {\n        this.error=this.auth.handleError(errorMessage)\n      }\n    );\n    this.isLoading=false\n   \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9hY2NvdW50L3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthenticationService } from '../../../authentication.service'\nimport { MustMatch } from '../../../_helpers/must-match.validator';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  public error:string\n  isLoading=false\n  constructor(public auth:AuthenticationService, public router: Router,public formBuilder: FormBuilder) { }\n  \n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n        firstname: ['', Validators.required],\n        lastname: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required],\n      }, {\n        validator: MustMatch('password', 'confirmPassword')\n    });\n    this.auth.testConnection().subscribe(\n      resData => {       \n      },\n      errorMessage => {\n        this.error='Could not connect to sain authentication service, please download at \\n https://hub.docker.com/repository/docker/nsfsain/sain-auth-service, start image, \\nand set port to 3000' \n        \n      });\n  }\n  get f(){ return this.registerForm.controls}\n  \n  register(){\n    this.submitted=true\n    if (!this.registerForm.valid) {\n      return;\n    }\n    this.isLoading=true\n    this.auth.register(this.registerForm.value).subscribe(\n      resData => {\n        this.router.navigate(['/login']);\n      },\n      errorMessage => {\n        this.error=this.auth.handleError(errorMessage)\n        \n      }\n    );\n    this.isLoading=false\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtYTJhL2FyY2FkZS1hMmEuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-a2a',\n  templateUrl: './arcade-a2a.component.html',\n  styleUrls: ['./arcade-a2a.component.css']\n  \n})\nexport class ArcadeA2aComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        clusteredDir: [, Validators.required],\n        distOp: [, Validators.required]        \n    });\n    if (this.isLoading==false) {\n      this.arcade.testA2aConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to A2a service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-a2a-service, start image, and set port to 3005'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid //||\n      // !this.historyRevisionFile ||\n      // !this.structurl_DSMFile\n    ) {\n      return;\n    }\n    const data = new FormData();      \n    data.append(\"clusteredDir\", this.dataForm.get(\"clusteredDir\").value);  \n    data.append(\"distOp\", this.dataForm.get(\"distOp\").value);\n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runA2a(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}","export default \".font-double{\\r\\n    font-size:1.2rem;\\r\\n}\\r\\n.font-single{\\r\\n    font-size:1.05rem;\\r\\n}\\r\\n.height-400{\\r\\n    height:250px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFyY2FkZS1hY2RjL2FyY2FkZS1hY2RjLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJhcmNhZGUtYWNkYy9hcmNhZGUtYWNkYy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvbnQtZG91Ymxle1xyXG4gICAgZm9udC1zaXplOjEuMnJlbTtcclxufVxyXG4uZm9udC1zaW5nbGV7XHJcbiAgICBmb250LXNpemU6MS4wNXJlbTtcclxufVxyXG4uaGVpZ2h0LTQwMHtcclxuICAgIGhlaWdodDoyNTBweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-acdc',\n  templateUrl: './arcade-acdc.component.html',\n  styleUrls: ['./arcade-acdc.component.css']\n  \n})\nexport class ArcadeAcdcComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        depsFile: [, Validators.required],\n        clusteredFile: [, Validators.required]        \n    });\n    if (this.isLoading==false) {\n      this.arcade.testAcdcConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Acdc service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-acdc-service, start image, and set port to 3002'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid //||\n      // !this.historyRevisionFile ||\n      // !this.structurl_DSMFile\n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"depsFile\", this.dataForm.get(\"depsFile\").value);\n    data.append(\"clusteredFile\", this.dataForm.get(\"clusteredFile\").value);  \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runAcdc(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtYXJjL2FyY2FkZS1hcmMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-arc',\n  templateUrl: './arcade-arc.component.html',\n  styleUrls: ['./arcade-arc.component.css']\n  \n})\nexport class ArcadeArcComponent   implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        srcDir: [, Validators.required],\n        outputDir: [, Validators.required],\n        classDir: [, Validators.required]   \n    });\n    if (this.isLoading==false) {\n      this.arcade.testArcConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Arc service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-arc-service, start image, and set port to 3014'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"srcDir\", this.dataForm.get(\"srcDir\").value);\n    data.append(\"outputDir\", this.dataForm.get(\"outputDir\").value);  \n    data.append(\"classDir\", this.dataForm.get(\"classDir\").value);  \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runArc(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtYXJjaHNtZWxsZGV0ZWN0b3IvYXJjYWRlLWFyY2hzbWVsbGRldGVjdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-archsmelldetector',\n  templateUrl: './arcade-archsmelldetector.component.html',\n  styleUrls: ['./arcade-archsmelldetector.component.css']\n  \n})\nexport class ArcadeArchsmelldetectorComponent implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        depsFile: [, Validators.required],\n        clusteredFile: [, Validators.required],\n        smellFile: [, Validators.required]\n    });\n    if (this.isLoading==false) {\n      this.arcade.testArchsmelldetectorConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Archsmelldetector service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-archsmelldetector-service, start image, and set port to 3003'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {    \n    if (\n      !this.dataForm.valid //||\n      // !this.historyRevisionFile ||\n      // !this.structurl_DSMFile\n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"depsFile\", this.dataForm.get(\"depsFile\").value);\n    data.append(\"clusteredFile\", this.dataForm.get(\"clusteredFile\").value);  \n    data.append(\"smellFile\", this.dataForm.get(\"smellFile\").value);\n    this.submitted = true;\n    this.isLoading=true\n    this.arcade.runArchsmelldetector(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtYmF0Y2hjbG9uZWZpbmRlci9hcmNhZGUtYmF0Y2hjbG9uZWZpbmRlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-batchclonefinder',\n  templateUrl: './arcade-batchclonefinder.component.html',\n  styleUrls: ['./arcade-batchclonefinder.component.css']\n  \n})\nexport class ArcadeBatchclonefinderComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({\n        inputDir: [, Validators.required],\n        outputDir: [, Validators.required]       \n    });\n    if (this.isLoading==false) {\n      this.arcade.tesbatchCloneFinderConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Arcade Batch Clone Finder service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-batchclonefinder-service, start image, and set port to 3025'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();      \n    data.append(\"inputDir\", this.dataForm.get(\"inputDir\").value);  \n    data.append(\"outputDir\", this.dataForm.get(\"outputDir\").value);  \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runbatchCloneFinder(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtYzJjYXZlcmFnZWFuYWx5emUvYXJjYWRlLWMyY2F2ZXJhZ2VhbmFseXplLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-c2caverageanalyze',\n  templateUrl: './arcade-c2caverageanalyze.component.html',\n  styleUrls: ['./arcade-c2caverageanalyze.component.css']\n  \n})\nexport class ArcadeC2caverageanalyzeComponent   implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        cvglogFile: [, Validators.required],              \n    });\n    if (this.isLoading==false) {\n      this.arcade.testC2cAverageAnalyzeConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to C2cAverageAnalyze service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-c2caverageanalyze-service, start image, and set port to 3007'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid //||\n    ) {\n      return;\n    }\n    const data = new FormData();      \n    data.append(\"cvglogFile\", this.dataForm.get(\"cvglogFile\").value);      \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runC2cAverageAnalyze(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtY2xlYW51cGNvZGVtYWF0L2FyY2FkZS1jbGVhbnVwY29kZW1hYXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-cleanupcodemaat',\n  templateUrl: './arcade-cleanupcodemaat.component.html',\n  styleUrls: ['./arcade-cleanupcodemaat.component.css']\n  \n})\nexport class ArcadeCleanupcodemaatComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({\n        inputDir: [, Validators.required]        \n    });\n    if (this.isLoading==false) {\n      this.arcade.tesCleanupCodeMaatConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Clean-up Code-Maat service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-cleanupcodemaat-service, start image, and set port to 3024'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();      \n    data.append(\"inputDir\", this.dataForm.get(\"inputDir\").value);  \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runCleanupCodeMaat(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtY3ZnL2FyY2FkZS1jdmcuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-cvg',\n  templateUrl: './arcade-cvg.component.html',\n  styleUrls: ['./arcade-cvg.component.css']\n  \n})\nexport class ArcadeCvgComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({        \n        clusterDir: [, Validators.required]        \n    });\n    if (this.isLoading==false) {\n      this.arcade.testCvgConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to cvg service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-cvg-service, start image, and set port to 3006'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid //||\n  \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"clusterDir\", this.dataForm.get(\"clusterDir\").value);       \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runCvg(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtZGVjYXltZXRyaWNzL2FyY2FkZS1kZWNheW1ldHJpY3MuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-decaymetrics',\n  templateUrl: './arcade-decaymetrics.component.html',\n  styleUrls: ['./arcade-decaymetrics.component.css']\n  \n})\nexport class ArcadeDecaymetricsComponent   implements OnInit {  \n  public dataForm: FormGroup;  \n \n  public language= \"java\";\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({      \n        depsDir: [, Validators.required],\n        clusterDir: [, Validators.required]        \n    });\n    if (this.isLoading==false) {\n      this.arcade.testDecaymetricsConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Decaymetrics service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-decaymetrics-service, start image, and set port to 3008' \n        });\n    }\n  }\n\n  onRadioChange(language){\n    this.language=language;\n  }\n\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();    \n    data.append(\"depsDir\", this.dataForm.get(\"depsDir\").value);\n    data.append(\"clusterDir\", this.dataForm.get(\"clusterDir\").value);\n  \n    this.submitted = true;\n    this.isLoading=true;\n    this.arcade.runDecaymetrics(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtZGVwZW5kZW5jeWZpbmRlcnByb2Nlc3NpbmcvYXJjYWRlLWRlcGVuZGVuY3lmaW5kZXJwcm9jZXNzaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-dependencyfinderprocessing',\n  templateUrl: './arcade-dependencyfinderprocessing.component.html',\n  styleUrls: ['./arcade-dependencyfinderprocessing.component.css']\n  \n})\nexport class ArcadeDependencyfinderprocessingComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({\n        inputDir: [, Validators.required],\n        outputDir: [, Validators.required],\n        depFinderDir: [, Validators.required],\n        clusterDir: [, Validators.required],\n        cloneDir: [, Validators.required],\n        logicalDepFile: [, Validators.required],\n        packageName: [, Validators.required]    \n    });\n    if (this.isLoading==false) {\n      this.arcade.testdependencyFinderProcessingConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Arcade DependencyFinderProcessingConnection service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-dependencyfinderprocessing-service, start image, and set port to 3027'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();      \n    data.append(\"inputDir\", this.dataForm.get(\"inputDir\").value);  \n    data.append(\"outputDir\", this.dataForm.get(\"outputDir\").value);  \n    data.append(\"clusterDir\", this.dataForm.get(\"clusterDir\").value); \n    data.append(\"depFinderDir\", this.dataForm.get(\"depFinderDir\").value);  \n    data.append(\"cloneDir\", this.dataForm.get(\"cloneDir\").value);  \n    data.append(\"logicalDepFile\", this.dataForm.get(\"logicalDepFile\").value); \n    data.append(\"packageName\", this.dataForm.get(\"packageName\").value); \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.rundependencyFinderProcessing(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtZGVwZmluZHJ1bm5lci9hcmNhZGUtZGVwZmluZHJ1bm5lci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-depfindrunner',\n  templateUrl: './arcade-depfindrunner.component.html',\n  styleUrls: ['./arcade-depfindrunner.component.css']\n  \n})\nexport class ArcadeDepfindrunnerComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({\n        inputDir: [, Validators.required],\n        outputDir: [, Validators.required],\n        classDir: [, Validators.required]        \n    });\n    if (this.isLoading==false) {\n      this.arcade.testdepFindRunnerConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Arcade Depfindrunner service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-depfindrunner-service, start image, and set port to 3026'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();      \n    data.append(\"inputDir\", this.dataForm.get(\"inputDir\").value);  \n    data.append(\"outputDir\", this.dataForm.get(\"outputDir\").value);  \n    data.append(\"classDir\", this.dataForm.get(\"classDir\").value); \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.rundepFindRunner(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n\n","export default \".font-double{\\r\\n    font-size:1.2rem;\\r\\n}\\r\\n.font-single{\\r\\n    font-size:1.05rem;\\r\\n}\\r\\n.height-400{\\r\\n    height:250px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFyY2FkZS1kZXBzYnVpbGRlci9hcmNhZGUtZGVwc2J1aWxkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6ImFyY2FkZS1kZXBzYnVpbGRlci9hcmNhZGUtZGVwc2J1aWxkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb250LWRvdWJsZXtcclxuICAgIGZvbnQtc2l6ZToxLjJyZW07XHJcbn1cclxuLmZvbnQtc2luZ2xle1xyXG4gICAgZm9udC1zaXplOjEuMDVyZW07XHJcbn1cclxuLmhlaWdodC00MDB7XHJcbiAgICBoZWlnaHQ6MjUwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-depsbuilder',\n  templateUrl: './arcade-depsbuilder.component.html',\n  styleUrls: ['./arcade-depsbuilder.component.css']\n  \n})\nexport class ArcadeDepsBuilderComponent implements OnInit {  \n  public dataForm: FormGroup;  \n \n  public language= \"java\";\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({\n        language: ['java', Validators.required],\n        classpath: [\"Classpath\", Validators.required],   \n        srcDir: [\"Source Dir\", Validators.required],\n        depsFile: ['Deps File', Validators.required]\n    });\n    if (this.isLoading==false) {\n      this.arcade.testdepsBuilderConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Depsbuilder service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-depsbuilders-service, start image, and set port to 3001' \n        });\n    }\n  }\n\n  onRadioChange(language){    \n    this.language=language;     \n  }\n\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n\n    this.dataForm.controls['language'].setValue(this.language); \n\n    const data = new FormData();    \n    data.append(\"language\", this.dataForm.get(\"language\").value);\n    data.append(\"classpath\", this.dataForm.get(\"classpath\").value);\n    data.append(\"depsFile\", this.dataForm.get(\"depsFile\").value);\n    data.append(\"srcDir\", this.dataForm.get(\"srcDir\").value);\n  \n    this.submitted = true;\n    this.isLoading=true;\n    this.arcade.rundepsBuilder(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtcGlwZWV4dHJhY3Rvci9hcmNhZGUtcGlwZWV4dHJhY3Rvci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-pipeextractor',\n  templateUrl: './arcade-pipeextractor.component.html',\n  styleUrls: ['./arcade-pipeextractor.component.css']\n  \n})\nexport class ArcadePipeextractorComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        srcDir: [, Validators.required],\n        outputDir: [, Validators.required]        \n    });\n    if (this.isLoading==false) {\n      this.arcade.testPipeExtractorConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to PipeExtractor service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-pipeextractor-service, start image, and set port to 3011'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"srcDir\", this.dataForm.get(\"srcDir\").value);\n    data.append(\"outputDir\", this.dataForm.get(\"outputDir\").value);  \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runPipeExtractor(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtcGtnL2FyY2FkZS1wa2cuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-pkg',\n  templateUrl: './arcade-pkg.component.html',\n  styleUrls: ['./arcade-pkg.component.css']\n  \n})\nexport class ArcadePkgComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        depsDir: [, Validators.required],\n        pkgprefixes: [, Validators.required]        \n    });\n    if (this.isLoading==false) {\n      this.arcade.testPkgConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to pkg service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-pkg-service, start image, and set port to 3004'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid //||\n      // !this.historyRevisionFile ||\n      // !this.structurl_DSMFile\n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"depsDir\", this.dataForm.get(\"depsDir\").value);\n    data.append(\"pkgprefixes\", this.dataForm.get(\"pkgprefixes\").value);      \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runPkg(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtc21lbGxkZW5zaXRpYW5hbHl6ZXIvYXJjYWRlLXNtZWxsZGVuc2l0aWFuYWx5emVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-smelldensitianalyzer',\n  templateUrl: './arcade-smelldensitianalyzer.component.html',\n  styleUrls: ['./arcade-smelldensitianalyzer.component.css']\n  \n})\nexport class ArcadeSmelldensitianalyzerComponent   implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        smellsDir: [, Validators.required],\n        clusteredDir: [, Validators.required]        \n    });\n    if (this.isLoading==false) {\n      this.arcade.testSmellDensityAnalyzerConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Smelldensityanalyzer service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-smelldensitianalyzer-service, start image, and set port to 3009'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"smellsDir\", this.dataForm.get(\"smellsDir\").value);\n    data.append(\"clusteredDir\", this.dataForm.get(\"clusteredDir\").value);  \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runSmellDensityAnalyzer(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNhZGUtc21lbGxldm9sdXRpb25hbmFseXplci9hcmNhZGUtc21lbGxldm9sdXRpb25hbmFseXplci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { ArcadeService} from '../arcade.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-arcade-smellevolutionanalyzer',\n  templateUrl: './arcade-smellevolutionanalyzer.component.html',\n  styleUrls: ['./arcade-smellevolutionanalyzer.component.css']\n  \n})\nexport class ArcadeSmellevolutionanalyzerComponent    implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public arcade: ArcadeService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        smellsDir: [, Validators.required]           \n    });\n    if (this.isLoading==false) {\n      this.arcade.testSmellEvolutionAnalyzerConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Smellevolutionanalyzer service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/arcade-smellevolutionanalyzer-service, start image, and set port to 3010'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"smellsDir\", this.dataForm.get(\"smellsDir\").value);    \n    this.submitted = true;\n    this.isLoading = true;\n    this.arcade.runSmellEvolutionAnalyzer(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArcadeService {  \n \n  constructor(public http: HttpClient) { }\n\n  //depsBuilder\n  public testdepsBuilderConnection():Observable<any>{    \n    return this.http.get(environment.arcade_depsbuilder_url + '/engine/arcade'); \n  }\n\n  public rundepsBuilder(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/depsBuilder',data);\n    return this.http.post(environment.arcade_depsbuilder_url + '/engine/arcade/depsBuilder',data);\n  }\n\n  //acdc\n  public testAcdcConnection():Observable<any>{    \n    return this.http.get(environment.arcade_acdc_url + '/engine/arcade'); \n  }\n\n  public runAcdc(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/acdc',data);\n    return this.http.post(environment.arcade_acdc_url + '/engine/arcade/acdc',data);\n  }\n  \n  //archsmelldetector\n  public testArchsmelldetectorConnection():Observable<any>{    \n    return this.http.get(environment.arcade_archsmelldetector_url + '/engine/arcade'); \n  }\n\n  public runArchsmelldetector(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/archsmelldetector',data);\n    return this.http.post(environment.arcade_archsmelldetector_url + '/engine/arcade/archsmelldetector',data);\n  }\n\n  //arc\n  public testArcConnection():Observable<any>{    \n    return this.http.get(environment.arcade_arc_url + '/engine/arcade'); \n  }\n\n  public runArc(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/arc',data);\n    return this.http.post(environment.arcade_arc_url + '/engine/arcade/arc',data);\n  }\n\n  //pkg\n  public testPkgConnection():Observable<any>{    \n    return this.http.get(environment.arcade_pkg_url + '/engine/arcade'); \n  }\n\n  public runPkg(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/pkg',data);\n    return this.http.post(environment.arcade_pkg_url + '/engine/arcade/pkg',data);\n  }\n\n  //a2a\n  public testA2aConnection():Observable<any>{    \n    return this.http.get(environment.arcade_a2a_url + '/engine/arcade'); \n  }\n\n  public runA2a(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/a2a',data);\n    return this.http.post(environment.arcade_a2a_url + '/engine/arcade/a2a',data);\n  }\n\n  //cvg\n  public testCvgConnection():Observable<any>{    \n    return this.http.get(environment.arcade_cvg_url + '/engine/arcade'); \n  }\n\n  public runCvg(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/cvg',data);\n    return this.http.post(environment.arcade_cvg_url + '/engine/arcade/cvg',data);\n  }\n\n  //c2caverageanalyze\n  public testC2cAverageAnalyzeConnection():Observable<any>{    \n    return this.http.get(environment.arcade_c2caverageanalyze_url + '/engine/arcade'); \n  }\n\n  public runC2cAverageAnalyze(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/c2caverageanalyze',data);\n    return this.http.post(environment.arcade_c2caverageanalyze_url + '/engine/arcade/c2caverageanalyze',data);\n  }\n\n  //decaymetrics\n  public testDecaymetricsConnection():Observable<any>{    \n    return this.http.get(environment.arcade_decaymetrics_url + '/engine/arcade'); \n  }\n\n  public runDecaymetrics(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/decaymetrics',data);\n    return this.http.post(environment.arcade_decaymetrics_url + '/engine/arcade/decaymetrics',data);\n  }\n\n  //smelldensityanalyzer\n  public testSmellDensityAnalyzerConnection():Observable<any>{    \n    return this.http.get(environment.arcade_smelldensityanalyzer_url + '/engine/arcade'); \n  }\n\n  public runSmellDensityAnalyzer(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/smelldensityanalyzer',data);\n    return this.http.post(environment.arcade_smelldensityanalyzer_url + '/engine/arcade/smelldensityanalyzer',data);\n  }\n\n  //smellevolutionanalyzer\n  public testSmellEvolutionAnalyzerConnection():Observable<any>{    \n    return this.http.get(environment.arcade_smellevolutionanalyzer_url + '/engine/arcade'); \n  }\n\n  public runSmellEvolutionAnalyzer(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/smellevolutionanalyzer',data);\n    return this.http.post(environment.arcade_smellevolutionanalyzer_url + '/engine/arcade/smellevolutionanalyzer',data);\n  }\n\n  //pipeextractor\n  public testPipeExtractorConnection():Observable<any>{    \n    return this.http.get(environment.arcade_pipeextractor_url + '/engine/arcade'); \n  }\n\n  public runPipeExtractor(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/pipeextractor',data);\n    return this.http.post(environment.arcade_pipeextractor_url + '/engine/arcade/pipeextractor',data);\n  }\n\n  //cleanupcodemaat\n  public tesCleanupCodeMaatConnection():Observable<any>{    \n    return this.http.get(environment.arcade_cleanupcodemaat_url + '/engine/arcade'); \n  }\n\n  public runCleanupCodeMaat(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/cleanupcodemaat',data);\n    return this.http.post(environment.arcade_cleanupcodemaat_url + '/engine/arcade/cleanupcodemaat',data);\n  }\n\n  //batchclonefinder\n  public tesbatchCloneFinderConnection():Observable<any>{    \n    return this.http.get(environment.arcade_batchclonefinder_url + '/engine/arcade'); \n  }\n\n  public runbatchCloneFinder(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/batchclonefinder',data);\n    return this.http.post(environment.arcade_batchclonefinder_url + '/engine/arcade/batchclonefinder',data);\n  }\n\n  //depfindrunner\n  public testdepFindRunnerConnection():Observable<any>{    \n    return this.http.get(environment.arcade_depfindrunner_url + '/engine/arcade'); \n  }\n\n  public rundepFindRunner(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/depfindrunner',data);\n    return this.http.post(environment.arcade_depfindrunner_url + '/engine/arcade/depfindrunner',data).pipe(timeout(3600000));    \n  }\n\n  //dependencyfinderprocessing\n  public testdependencyFinderProcessingConnection():Observable<any>{    \n    return this.http.get(environment.arcade_dependencyfinderprocessing_url + '/engine/arcade'); \n  }\n\n  public rundependencyFinderProcessing(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/arcade/dependencyfinderprocessing',data);\n    return this.http.post(environment.arcade_dependencyfinderprocessing_url + '/engine/arcade/dependencyfinderprocessing',data);    \n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9jb2RlbWFhdC9jb2RlbWFhdC12Y3MvY29kZW1hYXQtdmNzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { CodeMaatService} from '../codemaat.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-codemaat-vcs',\n  templateUrl: './codemaat-vcs.component.html',\n  styleUrls: ['./codemaat-vcs.component.css']\n  \n})\nexport class CodemaatVcsComponent implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public codemaat: CodeMaatService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        inputLogFile: [, Validators.required],\n        outputFile: [, Validators.required],\n        versionControlType: [\"git2\", Validators.required], \n        analysis: [\"authors\", Validators.required],\n        inputEncoding: [\"UTF-8\", Validators.required],\n        maxRows: [0, Validators.required],\n        minRevisions: [5, Validators.required],\n        minSharedRevisions: [5, Validators.required],\n        minCouplings: [30, Validators.required],\n        maxCouplings: [100, Validators.required],\n        maxChangeSetSize: [30, Validators.required],\n        groupFile: [\"null\", Validators.required],\n        regex: [\"null\", Validators.required],\n        temporalPeriod: [\"null\", Validators.required],\n        agetimeNow: [\"0\", Validators.required],\n    });\n    if (this.isLoading==false) {\n      this.codemaat.testvcsConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Code Maat vcs service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/codemaat-vcs-service, start image, and set port to 3021'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"inputLogFile\", this.dataForm.get(\"inputLogFile\").value);\n    data.append(\"outputFile\", this.dataForm.get(\"outputFile\").value);\n    data.append(\"versionControlType\", this.dataForm.get(\"versionControlType\").value);\n    data.append(\"analysis\", this.dataForm.get(\"analysis\").value);\n    data.append(\"inputEncoding\", this.dataForm.get(\"inputEncoding\").value);\n    data.append(\"maxRows\", this.dataForm.get(\"maxRows\").value);  \n    data.append(\"minRevisions\", this.dataForm.get(\"minRevisions\").value);\n    data.append(\"minSharedRevisions\", this.dataForm.get(\"minSharedRevisions\").value);\n    data.append(\"minCouplings\", this.dataForm.get(\"minCouplings\").value);\n    data.append(\"maxCouplings\", this.dataForm.get(\"maxCouplings\").value);    \n    data.append(\"maxChangeSetSize\", this.dataForm.get(\"maxChangeSetSize\").value); \n    data.append(\"groupFile\", this.dataForm.get(\"groupFile\").value);  \n    data.append(\"regex\", this.dataForm.get(\"regex\").value); \n    data.append(\"temporalPeriod\", this.dataForm.get(\"temporalPeriod\").value);  \n    data.append(\"agetimeNow\", this.dataForm.get(\"agetimeNow\").value); \n\n    this.submitted = true;\n    this.isLoading = true;\n    this.codemaat.runvcs(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CodeMaatService {  \n \n  constructor(public http: HttpClient) { }\n\n  //depsBuilder\n  public testvcsConnection():Observable<any>{    \n    return this.http.get(environment.codemaat_vcs_url + '/engine/codemaat'); \n  }\n\n  public runvcs(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/codemaat/vcs',data);\n    return this.http.post(environment.codemaat_vcs_url + '/engine/codemaat/vcs',data);\n  }\n  \n}\n","export default \".tactics-button {\\r\\n\\r\\n    cursor: pointer;\\r\\n    float: right;\\r\\n    font: 16px Arial, Helvetica, sans-serif;\\r\\n    font-weight: bold;\\r\\n    height: 30px;\\r\\n    margin: 4px 4px 0;\\r\\n    text-shadow: 0 -1px 0 rgba(0,0,0,.3);\\r\\n    min-width: 140px;\\r\\n    height:34px;\\r\\n    outline: none;\\r\\n\\r\\n    box-shadow: -1px -1px 1px rgba(255,255,255,.5), 1px 1px 0 rgba(0,0,0,.4);\\r\\n    -moz-box-shadow: -1px -1px 1px rgba(255,255,255,.5), 1px 1px 0 rgba(0,0,0,.2);\\r\\n    -webkit-box-shadow: -1px -1px 1px rgba(255,255,255,.5), 1px 1px 0 rgba(0,0,0,.4);\\r\\n}\\r\\n\\r\\n/*================== row styles=========================================*/\\r\\n\\r\\n.row-details {\\r\\n    margin-top: 40px;\\r\\n    margin-bottom: 40px;\\r\\n    border: 2px double #D1D3D4;\\r\\n    padding-bottom: 20px;\\r\\n    padding-top: 20px;\\r\\n    min-width: 800px;\\r\\n}\\r\\n\\r\\n.row-caption {\\r\\n    position: absolute;\\r\\n    top: -33px;\\r\\n    padding-left: 5px;\\r\\n    padding-right: 5px;\\r\\n    font-size: 16px;\\r\\n    border-radius: 0px 15px 0px 0px;\\r\\n    border: 1px solid #D1D3D4;\\r\\n    background: -webkit-gradient( linear,left top, left bottom, color-stop(0, rgb(243,243,243)), color-stop(1, rgb(225,225,225)));\\r\\n    min-width: 200px;\\r\\n    max-width: 550px;\\r\\n    overflow: hidden;\\r\\n    box-shadow: -1px -1px 2px rgba(0,0,0,.3), 0 0 1px rgba(0,0,0,.2);\\r\\n    -webkit-box-shadow: -1px -1px 2px rgba(0,0,0,.3), 0 0 1px rgba(0,0,0,.2);\\r\\n    -moz-box-shadow: -1px -1px 2px rgba(0,0,0,.3), 0 0 1px rgba(0,0,0,.2);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.row-caption .secton-label-left {\\r\\n        height: 100%;\\r\\n        border-right: 1px solid rgba(255,255,255,.8);\\r\\n        padding: 5px;\\r\\n    }\\r\\n\\r\\n.row-caption .secton-label-right {\\r\\n        height: 100%;\\r\\n        border-left: 1px solid rgba(0,0,0,.2);\\r\\n        padding: 5px;\\r\\n    }\\r\\n\\r\\n.row-caption-right {\\r\\n    right: 15px;\\r\\n    border-radius: 15px 0px 0px 0px;\\r\\n    padding-left: 15px;\\r\\n}\\r\\n\\r\\n/*==============================================snippets details  ============================================================*/\\r\\n\\r\\n.file-information {\\r\\n    background: #e1e1e1; /* Fallback color for non-css3 browsers */\\r\\n    width: 100%;\\r\\n\\r\\n    /* Gradients */\\r\\n    background: -webkit-gradient( linear,left top, left bottom, color-stop(0, rgb(243,243,243)), color-stop(1, rgb(225,225,225)));\\r\\n    /* Rounded Corners */\\r\\n    border-radius: 17px;\\r\\n    -webkit-border-radius: 17px;\\r\\n    -moz-border-radius: 17px;\\r\\n    /* Shadows */\\r\\n    box-shadow: 1px 1px 2px rgba(0,0,0,.3), 0 0 2px rgba(0,0,0,.3);\\r\\n    -webkit-box-shadow: 1px 1px 2px rgba(0,0,0,.3), 0 0 2px rgba(0,0,0,.3);\\r\\n    -moz-box-shadow: 1px 1px 2px rgba(0,0,0,.3), 0 0 2px rgba(0,0,0,.3);\\r\\n}\\r\\n\\r\\n.information-label {\\r\\n    background: #fafafa; /* Fallback color for non-css3 browsers */\\r\\n    /* Gradients */\\r\\n    background: -webkit-gradient( linear, left bottom, left top, color-stop(0, rgb(250,250,250)), color-stop(1, rgb(230,230,230)));\\r\\n    border: 0;\\r\\n    border-bottom: 1px solid #fff;\\r\\n    border-right: 1px solid rgba(255,255,255,.8);\\r\\n    font-size: 16px;\\r\\n    height:inherit;\\r\\n    min-width: 150px;\\r\\n    /* Rounded Corners */\\r\\n    border-radius: 17px;\\r\\n    -webkit-border-radius: 17px;\\r\\n    -moz-border-radius: 17px;\\r\\n    /* Shadows */\\r\\n    box-shadow: -1px -1px 2px rgba(0,0,0,.3), 0 0 1px rgba(0,0,0,.2);\\r\\n    -webkit-box-shadow: -1px -1px 2px rgba(0,0,0,.3), 0 0 1px rgba(0,0,0,.2);\\r\\n    -moz-box-shadow: -1px -1px 2px rgba(0,0,0,.3), 0 0 1px rgba(0,0,0,.2);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.information-label .secton-label-left {\\r\\n        height: 100%;\\r\\n        border-right: 1px solid rgba(255,255,255,.8);\\r\\n        padding: 5px;\\r\\n    }\\r\\n\\r\\n.information-label .secton-label-right {\\r\\n        height: 100%;\\r\\n        border-left: 1px solid rgba(0,0,0,.2);\\r\\n        padding: 5px;\\r\\n    }\\r\\n\\r\\n.snippet-caption {\\r\\n    position: relative;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 5px;\\r\\n    padding-left: 15px;\\r\\n    font-size: 16px;\\r\\n    border-radius: 1px 20px 0px 20px;\\r\\n    border: 1px solid #D1D3D4;\\r\\n    min-width: 200px;\\r\\n    background: -webkit-gradient( linear, left bottom, left top, color-stop(0, rgb(250,250,250)), color-stop(1, rgb(230,230,230)));\\r\\n    box-shadow: -1px -1px 1px rgba(255,255,255,.5), 1px 1px 0 rgba(0,0,0,.4);\\r\\n    -moz-box-shadow: -1px -1px 1px rgba(255,255,255,.5), 1px 1px 0 rgba(0,0,0,.2);\\r\\n    -webkit-box-shadow: -1px -1px 1px rgba(255,255,255,.5), 1px 1px 0 rgba(0,0,0,.4);\\r\\n}\\r\\n\\r\\n.snippet-codes {\\r\\n    position: relative;\\r\\n    top: -5px;\\r\\n    border: 2px solid #D1D3D4;\\r\\n    border-top-left-radius: 30px;\\r\\n    border-top-right-radius: 0px;\\r\\n    width: 100%;\\r\\n    padding: 10px 20px;\\r\\n    min-height: 100px;\\r\\n}\\r\\n\\r\\n.snippet-id-label {\\r\\n\\r\\n    background: -webkit-gradient( linear,left top, left bottom, color-stop(0, rgb(243,243,243)), color-stop(1, rgb(225,225,225)));\\r\\n    border: 0;\\r\\n    border-bottom: 1px solid #fff;\\r\\n    border-right: 1px solid rgba(255,255,255,.8);\\r\\n    font-size: 16px;\\r\\n    margin: 4px;\\r\\n    padding: 5px;\\r\\n    width: 32px;\\r\\n    margin-right: 40px;\\r\\n    padding-left: 10px;\\r\\n    /* Rounded Corners */\\r\\n    border-radius: 20px;\\r\\n    -webkit-border-radius: 20px;\\r\\n    -moz-border-radius: 20px;\\r\\n    /* Shadows */\\r\\n    box-shadow: -1px -1px 2px rgba(0,0,0,.3), 0 0 1px rgba(0,0,0,.2);\\r\\n    -webkit-box-shadow: -1px -1px 2px rgba(0,0,0,.3), 0 0 1px rgba(0,0,0,.2);\\r\\n    -moz-box-shadow: -1px -1px 2px rgba(0,0,0,.3), 0 0 1px rgba(0,0,0,.2);\\r\\n}\\r\\n\\r\\n/*======================= close  buttons styles =================================*/\\r\\n\\r\\n.close-button {\\r\\n    position: absolute;\\r\\n    right: 11px;\\r\\n    top: 9px;\\r\\n    background: #44921f; /* Fallback color for non-css3 browsers */\\r\\n    /* Gradients */\\r\\n    background: -moz-linear-gradient( center top, rgb(79,188,32) 0%, rgb(73,157,34) 15%, rgb(62,135,28) 88%, rgb(49,114,21) 100%);\\r\\n    border: 0;\\r\\n    color: #eee;\\r\\n    cursor: pointer;\\r\\n    font: 16px Arial, Helvetica, sans-serif;\\r\\n    font-weight: bold;\\r\\n    margin: 4px 4px 0;\\r\\n    text-shadow: 0 -1px 0 rgba(0,0,0,.3);\\r\\n    width: 35px;\\r\\n    height: 20px;\\r\\n    outline: none;\\r\\n    /* Rounded Corners */\\r\\n    border-radius: 10px 0 0 0;\\r\\n    -webkit-border-radius: 10px 0 0 0;\\r\\n    -moz-border-radius: 10px 0 0 0;\\r\\n    /* Shadows */\\r\\n    box-shadow: -1px -1px 1px rgba(255,255,255,.5), 1px 1px 0 rgba(0,0,0,.4);\\r\\n    -moz-box-shadow: -1px -1px 1px rgba(255,255,255,.5), 1px 1px 0 rgba(0,0,0,.2);\\r\\n    -webkit-box-shadow: -1px -1px 1px rgba(255,255,255,.5), 1px 1px 0 rgba(0,0,0,.4);\\r\\n}\\r\\n\\r\\n.close-button:hover {\\r\\n    background: #4ea923; /* Fallback color for non-css3 browsers */\\r\\n    /* Gradients */\\r\\n    background: -moz-linear-gradient( center top, rgb(89,222,27) 0%, rgb(83,179,38) 15%, rgb(66,143,27) 80%, rgb(54,120,22) 100%);\\r\\n}\\r\\n\\r\\n.close-button:active {\\r\\n    background: #4ea923; /* Fallback color for non-css3 browsers */\\r\\n    /* Gradients */\\r\\n    background: -moz-linear-gradient( center bottom, rgb(89,222,27) 0%, rgb(83,179,38) 15%, rgb(66,143,27) 80%, rgb(54,120,22) 100%);\\r\\n}\\r\\n\\r\\n.description{\\r\\n    font-family: \\\"Lucida Sans\\\", sans-serif;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-components-list',\n  templateUrl: './components-list.component.html',\n  styleUrls: ['./components-list.component.css']\n})\nexport class ComponentsListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9jb250YWN0LXVzL2NvbnRhY3QtdXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})\nexport class ContactUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9naXQvZ2l0LWxvZy9naXQtbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { GitService} from '../git.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-git-log',\n  templateUrl: './git-log.component.html',\n  styleUrls: ['./git-log.component.css']\n  \n})\nexport class GitLogComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  public follow:boolean; public source:boolean; public fulldiff:boolean; public logsize:boolean;\n  public numstat:boolean; public norenames:boolean; public allmatch:boolean; public invertgrep:boolean;\n  public regexpIgnorecase:boolean; public basicRegexp:boolean; public extendedRegexp:boolean; public fixedstrings:boolean;\n  public perlRegexp:boolean; public removeEmpty:boolean; public merges:boolean; public nominParents:boolean;\n  public nomaxParents:boolean; public firstParent:boolean; public reflog:boolean; public alternateRefs:boolean;\n  public singleworktree:boolean; public ignoremissing:boolean; public boundary:boolean; public all:boolean;\n\n  \n  constructor(public auth:AuthenticationService,public git: GitService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        gitRepoURL: [, Validators.required],\n        shallowSince: [\"null\", Validators.required],    \n        follow: [false, Validators.required],\n        source: [false, Validators.required],\n        fulldiff: [false, Validators.required],\n        logsize: [false, Validators.required] ,\n        numstat: [false, Validators.required],\n        norenames: [false, Validators.required],\n        allmatch: [false, Validators.required],\n        invertgrep: [false, Validators.required] ,\n        regexpIgnorecase: [false, Validators.required],\n        basicRegexp: [false, Validators.required],\n        extendedRegexp: [false, Validators.required],\n        fixedstrings: [false, Validators.required] ,\n        perlRegexp: [false, Validators.required],\n        removeEmpty: [false, Validators.required],\n        merges: [false, Validators.required],\n        nominParents: [false, Validators.required] ,\n        nomaxParents: [false, Validators.required],\n        firstParent: [false, Validators.required],\n        reflog: [false, Validators.required],\n        alternateRefs: [false, Validators.required] ,\n        singleworktree: [false, Validators.required],\n        ignoremissing: [false, Validators.required],\n        boundary: [false, Validators.required],\n        all: [false, Validators.required],\n        optionalParams: [\"null\", Validators.required]\n    });\n    if (this.isLoading==false) {\n      this.git.testgitlogConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Git Log service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/git-log-service, start image, and set port to 3022'\n        });\n    }\n  }\n\n  followCheckbox(follow){\n    this.follow=follow;\n  }\n\n  sourceCheckbox(source){\n    this.source=source;\n  }\n\n  fulldiffCheckbox(fulldiff){\n    this.fulldiff=fulldiff;\n  }\n\n  logsizeCheckbox(logsize){\n    this.logsize=logsize;\n  }\n  \n  numstatCheckbox(numstat){\n    this.numstat=numstat;\n  }\n\n  norenamesCheckbox(norenames){\n    this.norenames=norenames;\n  }\n\n  allmatchCheckbox(allmatch){\n    this.allmatch=allmatch;\n  }\n\n  invertgrepCheckbox(invertgrep){\n    this.invertgrep=invertgrep;\n  }\n  regexpIgnorecaseCheckbox(regexpIgnorecase){\n    this.regexpIgnorecase=regexpIgnorecase;\n  }\n\n  basicRegexpCheckbox(basicRegexp){\n    this.basicRegexp=basicRegexp;\n  }\n\n  extendedRegexpCheckbox(extendedRegexp){\n    this.extendedRegexp=extendedRegexp;\n  }\n\n  fixedstringsCheckbox(fixedstrings){\n    this.fixedstrings=fixedstrings;\n  }\n  perlRegexpCheckbox(perlRegexp){\n    this.perlRegexp=perlRegexp;\n  }\n\n  removeEmptyCheckbox(removeEmpty){\n    this.removeEmpty=removeEmpty;\n  }\n\n  mergesCheckbox(merges){\n    this.merges=merges;\n  }\n\n  nominParentsCheckbox(nominParents){\n    this.nominParents=nominParents;\n  }\n  nomaxParentsCheckbox(nomaxParents){\n    this.nomaxParents=nomaxParents;\n  }\n\n  firstParentCheckbox(firstParent){\n    this.firstParent=firstParent;\n  }\n\n  reflogCheckbox(reflog){\n    this.reflog=reflog;\n  }\n\n  alternateRefsCheckbox(alternateRefs){\n    this.alternateRefs=alternateRefs;\n  }\n\n  singleworktreeCheckbox(singleworktree){\n    this.singleworktree=singleworktree;\n  }\n\n  ignoremissingCheckbox(ignoremissing){\n    this.ignoremissing=ignoremissing;\n  }\n\n  boundaryCheckbox(boundary){\n    this.boundary=boundary;\n  }\n\n  allCheckbox(all){\n    this.all=all;\n  }\n\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"gitRepoURL\", this.dataForm.get(\"gitRepoURL\").value);\n    data.append(\"shallowSince\", this.dataForm.get(\"shallowSince\").value);\n    data.append(\"follow\", this.dataForm.get(\"follow\").value);\n    data.append(\"source\", this.dataForm.get(\"source\").value);\n    data.append(\"fulldiff\", this.dataForm.get(\"fulldiff\").value);\n    data.append(\"logsize\", this.dataForm.get(\"logsize\").value);     \n    data.append(\"numstat\", this.dataForm.get(\"numstat\").value);\n    data.append(\"extendedRegexp\", this.dataForm.get(\"extendedRegexp\").value);\n    data.append(\"norenames\", this.dataForm.get(\"norenames\").value);\n    data.append(\"allmatch\", this.dataForm.get(\"allmatch\").value);\n    data.append(\"invertgrep\", this.dataForm.get(\"invertgrep\").value); \n    data.append(\"regexpIgnorecase\", this.dataForm.get(\"regexpIgnorecase\").value);\n    data.append(\"basicRegexp\", this.dataForm.get(\"basicRegexp\").value);\n    data.append(\"fixedstrings\", this.dataForm.get(\"fixedstrings\").value);\n    data.append(\"perlRegexp\", this.dataForm.get(\"perlRegexp\").value); \n    data.append(\"removeEmpty\", this.dataForm.get(\"removeEmpty\").value);\n    data.append(\"merges\", this.dataForm.get(\"merges\").value);\n    data.append(\"nominParents\", this.dataForm.get(\"nominParents\").value);\n    data.append(\"nomaxParents\", this.dataForm.get(\"nomaxParents\").value); \n    data.append(\"firstParent\", this.dataForm.get(\"firstParent\").value);\n    data.append(\"reflog\", this.dataForm.get(\"reflog\").value);\n    data.append(\"alternateRefs\", this.dataForm.get(\"alternateRefs\").value);\n    data.append(\"singleworktree\", this.dataForm.get(\"singleworktree\").value); \n    data.append(\"ignoremissing\", this.dataForm.get(\"ignoremissing\").value);\n    data.append(\"boundary\", this.dataForm.get(\"boundary\").value);\n    data.append(\"all\", this.dataForm.get(\"all\").value);\n    data.append(\"optionalParams\", this.dataForm.get(\"optionalParams\").value);  \n    this.submitted = true;\n    this.isLoading = true;\n    this.git.rungitlog(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitService {\n\n  constructor(public http: HttpClient) { }\n\n  //depsBuilder\n  public testgitlogConnection():Observable<any>{    \n    return this.http.get(environment.git_log_url + '/engine/git'); \n  }\n\n  public rungitlog(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/git/log',data);\n    return this.http.post(environment.git_log_url + '/engine/git/log',data);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9oZWFkZXIvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".logo{\\r\\n    max-height: inherit;\\r\\n    max-width: 140px;\\r\\n    margin-right: 50px;\\r\\n}\\r\\n\\r\\n.nav-link-local{\\r\\n    font-size: 18px;\\r\\n    font-weight: 400;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2hlYWRlci9oZWFkZXItb25lL2hlYWRlci1vbmUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtBQUNwQiIsImZpbGUiOiIuLi9oZWFkZXIvaGVhZGVyLW9uZS9oZWFkZXItb25lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9nb3tcclxuICAgIG1heC1oZWlnaHQ6IGluaGVyaXQ7XHJcbiAgICBtYXgtd2lkdGg6IDE0MHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xyXG59XHJcblxyXG4ubmF2LWxpbmstbG9jYWx7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service'\n\n@Component({\n  selector: 'app-header-one',\n  templateUrl: './header-one.component.html',\n  styleUrls: ['./header-one.component.css']\n})\nexport class HeaderOneComponent implements OnInit {\n\n  constructor(public auth:AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9oZWFkZXIvaGVhZGVyLXR3by9oZWFkZXItdHdvLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header-two',\n  templateUrl: './header-two.component.html',\n  styleUrls: ['./header-two.component.css']\n})\nexport class HeaderTwoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9saW51eC9saW51eC1zZWQvbGludXgtc2VkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { LinuxService} from '../linux.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-linux-sed',\n  templateUrl: './linux-sed.component.html',\n  styleUrls: ['./linux-sed.component.css']\n  \n})\nexport class LinuxSedComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public linux: LinuxService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        inputFile: [, Validators.required],\n        sedCommand: [, Validators.required],\n        extendedRegex: [\"null\", Validators.required],\n        sedCommandFile: [\"null\", Validators.required]\n    });\n    if (this.isLoading==false) {\n      this.linux.testsedConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Linux Sed service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/linux-sed-service, start image, and set port to 3023'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid       \n    ) {\n      return;\n    }\n    const data = new FormData();      \n    data.append(\"inputFile\", this.dataForm.get(\"inputFile\").value);  \n    data.append(\"sedCommand\", this.dataForm.get(\"sedCommand\").value);\n    data.append(\"extendedRegex\", this.dataForm.get(\"extendedRegex\").value);  \n    data.append(\"sedCommandFile\", this.dataForm.get(\"sedCommandFile\").value);\n    this.submitted = true;\n    this.isLoading = true;\n    this.linux.runsed(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LinuxService {\n\n  constructor(public http: HttpClient) { }\n\n  //depsBuilder\n  public testsedConnection():Observable<any>{    \n    return this.http.get(environment.linux_sed_url + '/engine/linux'); \n  }\n\n  public runsed(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3000/engine/linux/sed',data);\n    return this.http.post(environment.linux_sed_url + '/engine/linux/sed',data);\n  }\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9tYWxsZXQvbWFsbGV0LWhsZGEvbWFsbGV0LWhsZGEuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { MalletService} from '../mallet.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-mallet-hlda',\n  templateUrl: './mallet-hlda.component.html',\n  styleUrls: ['./mallet-hlda.component.css']\n  \n})\nexport class MalletHldaComponent implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public mallet: MalletService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        inputFile: [, Validators.required],\n        prefixCode: [\"null\", Validators.required],\n        testingFile: [\"null\", Validators.required], \n        outputState: [\"null\", Validators.required],\n        randomSeed: [0, Validators.required],\n        showProgress: [\"true\", Validators.required],\n        showTopicsInterval: [50, Validators.required],\n        numtopwords: [20, Validators.required],\n        numLevels: [3, Validators.required],\n        alpha: [10.0, Validators.required],\n        gamma: [1.0, Validators.required], \n        eta: [0.1, Validators.required], \n    });\n    if (this.isLoading==false) {\n      this.mallet.testhldasConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Mallet hlda service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/mallet-hlda-service, start image, and set port to 3018'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"inputFile\", this.dataForm.get(\"inputFile\").value);\n    data.append(\"prefixCode\", this.dataForm.get(\"prefixCode\").value);\n    data.append(\"testingFile\", this.dataForm.get(\"testingFile\").value);\n    data.append(\"outputState\", this.dataForm.get(\"outputState\").value);\n    data.append(\"randomSeed\", this.dataForm.get(\"randomSeed\").value);\n    data.append(\"showProgress\", this.dataForm.get(\"showProgress\").value);  \n    data.append(\"showTopicsInterval\", this.dataForm.get(\"showTopicsInterval\").value);\n    data.append(\"numtopwords\", this.dataForm.get(\"numtopwords\").value);\n    data.append(\"numLevels\", this.dataForm.get(\"numLevels\").value);\n    data.append(\"alpha\", this.dataForm.get(\"alpha\").value);    \n    data.append(\"gamma\", this.dataForm.get(\"gamma\").value); \n    data.append(\"eta\", this.dataForm.get(\"eta\").value);  \n\n    this.submitted = true;\n    this.isLoading = true;\n    this.mallet.runhlda(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9tYWxsZXQvbWFsbGV0LWltcG9ydGRpci9tYWxsZXQtaW1wb3J0ZGlyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { MalletService} from '../mallet.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-mallet-importdir',\n  templateUrl: './mallet-importdir.component.html',\n  styleUrls: ['./mallet-importdir.component.css']\n  \n})\nexport class MalletImportdirComponent implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public mallet: MalletService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        srcDir: [, Validators.required],\n        outputFile: [, Validators.required],   \n        removeStopwords: [\"TRUE\", Validators.required],\n        keepSequence: [\"TRUE\", Validators.required],\n        prefixCode: [\"null\", Validators.required],\n        preserveCase: [\"FALSE\", Validators.required],  \n        stoplistFile: [\"null\", Validators.required],\n        extraStopwords: [\"null\", Validators.required],\n        skipHeader: [\"FALSE\", Validators.required],\n        skipHtml: [\"FALSE\", Validators.required],   \n        binaryFeatures: [\"FALSE\", Validators.required],\n        gramSizes: [1, Validators.required],\n        keepSequenceBigrams: [\"FALSE\", Validators.required],\n        saveTextinSource: [\"FALSE\", Validators.required], \n        stringPipe: [\"null\", Validators.required],\n        tokenPipe: [\"null\", Validators.required],\n        fvPipe: [\"null\", Validators.required],\n        encoding: [\"UTF-8\", Validators.required],   \n        tokenRegex: [\"\\\\p{Alpha}+\", Validators.required],        \n        printOutput: [\"FALSE\", Validators.required],\n        usePipefromFile: [\"null\", Validators.required]\n    });\n    if (this.isLoading==false) {\n      this.mallet.testimportdirConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Topic Model Generator service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/mallet-importdir-service, start image, and set port to 3012'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"srcDir\", this.dataForm.get(\"srcDir\").value);\n    data.append(\"outputFile\", this.dataForm.get(\"outputFile\").value);  \n    data.append(\"removeStopwords\", this.dataForm.get(\"removeStopwords\").value);\n    data.append(\"keepSequence\", this.dataForm.get(\"keepSequence\").value);  \n    data.append(\"prefixCode\", this.dataForm.get(\"prefixCode\").value);\n    data.append(\"preserveCase\", this.dataForm.get(\"preserveCase\").value); \n    data.append(\"stoplistFile\", this.dataForm.get(\"stoplistFile\").value);\n    data.append(\"extraStopwords\", this.dataForm.get(\"extraStopwords\").value);  \n    data.append(\"skipHeader\", this.dataForm.get(\"skipHeader\").value);\n    data.append(\"skipHtml\", this.dataForm.get(\"skipHtml\").value);  \n    data.append(\"binaryFeatures\", this.dataForm.get(\"binaryFeatures\").value);\n    data.append(\"gramSizes\", this.dataForm.get(\"gramSizes\").value);  \n    data.append(\"keepSequenceBigrams\", this.dataForm.get(\"keepSequenceBigrams\").value);\n    data.append(\"saveTextinSource\", this.dataForm.get(\"saveTextinSource\").value);\n    data.append(\"stringPipe\", this.dataForm.get(\"stringPipe\").value);\n    data.append(\"tokenPipe\", this.dataForm.get(\"tokenPipe\").value); \n    data.append(\"fvPipe\", this.dataForm.get(\"fvPipe\").value);\n    data.append(\"encoding\", this.dataForm.get(\"encoding\").value);\n    data.append(\"tokenRegex\", this.dataForm.get(\"tokenRegex\").value);\n    data.append(\"printOutput\", this.dataForm.get(\"printOutput\").value);\n    data.append(\"usePipefromFile\", this.dataForm.get(\"usePipefromFile\").value);\n    this.submitted = true;\n    this.isLoading = true;\n    this.mallet.runimportdir(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9tYWxsZXQvbWFsbGV0LWltcG9ydGZpbGUvbWFsbGV0LWltcG9ydGZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { MalletService} from '../mallet.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-mallet-importfile',\n  templateUrl: './mallet-importfile.component.html',\n  styleUrls: ['./mallet-importfile.component.css']\n  \n})\nexport class MalletImportfileComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public mallet: MalletService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        inputFile: [, Validators.required],\n        outputFile: [, Validators.required],   \n        prefixCode: [\"null\", Validators.required],\n        lineRegex: [\"^(\\\\S*)[\\\\s,]*(\\\\S*)[\\\\s,]*(.*)$\", Validators.required],\n        label: [2, Validators.required],\n        name: [1, Validators.required], \n        data: [3, Validators.required],\n        keepSequence: [\"FALSE\", Validators.required],\n        keepSequenceBigrams: [\"FALSE\", Validators.required],\n        removeStopwords: [\"FALSE\", Validators.required],  \n        preserveCase: [\"FALSE\", Validators.required],\n        encoding: [\"UTF-8\", Validators.required],\n        tokenRegex: [\"\\\\p{Alpha}+\", Validators.required],\n        printOutput: [\"FALSE\", Validators.required], \n        usePipefromFile: [\"null\", Validators.required],        \n        stoplistFile: [\"null\", Validators.required],\n        extraStopwords: [\"null\", Validators.required],        \n    });\n    if (this.isLoading==false) {\n      this.mallet.testimportfileConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Mallet import-file service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/mallet-importfile-service, start image, and set port to 3015'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"inputFile\", this.dataForm.get(\"inputFile\").value);\n    data.append(\"outputFile\", this.dataForm.get(\"outputFile\").value);  \n    data.append(\"removeStopwords\", this.dataForm.get(\"removeStopwords\").value);\n    data.append(\"keepSequence\", this.dataForm.get(\"keepSequence\").value);  \n    data.append(\"prefixCode\", this.dataForm.get(\"prefixCode\").value);    \n    data.append(\"preserveCase\", this.dataForm.get(\"preserveCase\").value);     \n    data.append(\"stoplistFile\", this.dataForm.get(\"stoplistFile\").value);    \n    data.append(\"extraStopwords\", this.dataForm.get(\"extraStopwords\").value); \n    data.append(\"lineRegex\", this.dataForm.get(\"lineRegex\").value);\n    data.append(\"label\", this.dataForm.get(\"label\").value);  \n    data.append(\"name\", this.dataForm.get(\"name\").value);\n    data.append(\"data\", this.dataForm.get(\"data\").value); \n    data.append(\"keepSequenceBigrams\", this.dataForm.get(\"keepSequenceBigrams\").value);\n    data.append(\"encoding\", this.dataForm.get(\"encoding\").value);\n    data.append(\"tokenRegex\", this.dataForm.get(\"tokenRegex\").value);\n    data.append(\"printOutput\", this.dataForm.get(\"printOutput\").value);\n    data.append(\"usePipefromFile\", this.dataForm.get(\"usePipefromFile\").value);\n    this.submitted = true;\n    this.isLoading = true;\n    this.mallet.runimportfile(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9tYWxsZXQvbWFsbGV0LWluZmVydG9waWNzL21hbGxldC1pbmZlcnRvcGljcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { MalletService} from '../mallet.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-mallet-infertopics',\n  templateUrl: './mallet-infertopics.component.html',\n  styleUrls: ['./mallet-infertopics.component.css']\n  \n})\nexport class MalletInfertopicsComponent  implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public mallet: MalletService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        prefixCode: [\"null\", Validators.required],\n        inputFile: [, Validators.required],\n        outputDocTopics: [, Validators.required],   \n        inferencerFilename: [\"null\", Validators.required],\n        doctopicsThreshold: [0.0, Validators.required], \n        docTopicsMax: [-1, Validators.required],\n        numIterations: [1000, Validators.required], \n        sampleInterval: [10, Validators.required], \n        burnIn: [10, Validators.required], \n        randomSeed: [0, Validators.required],                \n    });\n    if (this.isLoading==false) {\n      this.mallet.testinfertopicsConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Mallet Infer Topics service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/mallet-infertopics-service, start image, and set port to 3017'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData(); \n    data.append(\"prefixCode\", this.dataForm.get(\"prefixCode\").value);\n    data.append(\"inputFile\", this.dataForm.get(\"inputFile\").value);\n    data.append(\"outputDocTopics\", this.dataForm.get(\"outputDocTopics\").value);\n    data.append(\"inferencerFilename\", this.dataForm.get(\"inferencerFilename\").value);  \n    data.append(\"doctopicsThreshold\", this.dataForm.get(\"doctopicsThreshold\").value);  \n    data.append(\"numIterations\", this.dataForm.get(\"numIterations\").value);   \n    data.append(\"sampleInterval\", this.dataForm.get(\"sampleInterval\").value);  \n    data.append(\"burnIn\", this.dataForm.get(\"burnIn\").value);   \n    data.append(\"randomSeed\", this.dataForm.get(\"randomSeed\").value);\n\n    this.submitted = true;\n    this.isLoading = true;\n    this.mallet.runinfertopics(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9tYWxsZXQvbWFsbGV0LXBydW5lL21hbGxldC1wcnVuZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { MalletService} from '../mallet.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-mallet-prune',\n  templateUrl: './mallet-prune.component.html',\n  styleUrls: ['./mallet-prune.component.css']\n  \n})\nexport class MalletPruneComponent   implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public mallet: MalletService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        prefixCode: [\"null\", Validators.required],\n        inputFile: [, Validators.required],\n        outputFile: [, Validators.required], \n        trainingPortion: [1.0, Validators.required], \n        validationPortion: [0.0, Validators.required],  \n        randomSeed: [0, Validators.required],\n        trainingFile: [\"null\", Validators.required],   \n        testingFile: [\"null\", Validators.required], \n        validationFile: [\"null\", Validators.required],\n        pruneInfogain: [0, Validators.required],  \n        pruneCount: [0, Validators.required],\n        vectorToSequence: [\"false\", Validators.required],\n        hideTargets: [\"false\", Validators.required],\n        revealTargets: [\"false\", Validators.required]\n            \n    });\n    if (this.isLoading==false) {\n      this.mallet.testpruneConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Mallet Prune service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/mallet-prune-service, start image, and set port to 3019'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData(); \n    data.append(\"prefixCode\", this.dataForm.get(\"prefixCode\").value);\n    data.append(\"inputFile\", this.dataForm.get(\"inputFile\").value);\n    data.append(\"outputFile\", this.dataForm.get(\"outputFile\").value);\n    data.append(\"randomSeed\", this.dataForm.get(\"randomSeed\").value);\n    data.append(\"trainingPortion\", this.dataForm.get(\"trainingPortion\").value);  \n    data.append(\"validationPortion\", this.dataForm.get(\"validationPortion\").value);\n    data.append(\"trainingFile\", this.dataForm.get(\"trainingFile\").value);\n    data.append(\"testingFile\", this.dataForm.get(\"testingFile\").value);\n    data.append(\"validationFile\", this.dataForm.get(\"validationFile\").value);  \n    data.append(\"pruneInfogain\", this.dataForm.get(\"pruneInfogain\").value); \n    data.append(\"pruneCount\", this.dataForm.get(\"pruneCount\").value);  \n    data.append(\"vectorToSequence\", this.dataForm.get(\"vectorToSequence\").value);   \n    data.append(\"hideTargets\", this.dataForm.get(\"hideTargets\").value);  \n    data.append(\"revealTargets\", this.dataForm.get(\"revealTargets\").value);       \n\n    this.submitted = true;\n    this.isLoading = true;\n    this.mallet.runprune(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9tYWxsZXQvbWFsbGV0LXNwbGl0L21hbGxldC1zcGxpdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { MalletService} from '../mallet.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-mallet-split',\n  templateUrl: './mallet-split.component.html',\n  styleUrls: ['./mallet-split.component.css']\n  \n})\nexport class MalletSplitComponent implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public mallet: MalletService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        prefixCode: [\"null\", Validators.required],\n        inputFile: [, Validators.required],\n        outputFile: [, Validators.required], \n        trainingPortion: [1.0, Validators.required], \n        validationPortion: [0.0, Validators.required],  \n        randomSeed: [0, Validators.required],\n        trainingFile: [\"null\", Validators.required],   \n        testingFile: [\"null\", Validators.required], \n        validationFile: [\"null\", Validators.required],\n        pruneInfogain: [0, Validators.required],  \n        pruneCount: [0, Validators.required],\n        vectorToSequence: [\"false\", Validators.required],\n        hideTargets: [\"false\", Validators.required],\n        revealTargets: [\"false\", Validators.required]\n            \n    });\n    if (this.isLoading==false) {\n      this.mallet.testsplitConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Mallet Split service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/mallet-split-service, start image, and set port to 3020'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData(); \n    data.append(\"prefixCode\", this.dataForm.get(\"prefixCode\").value);\n    data.append(\"inputFile\", this.dataForm.get(\"inputFile\").value);\n    data.append(\"outputFile\", this.dataForm.get(\"outputFile\").value);\n    data.append(\"randomSeed\", this.dataForm.get(\"randomSeed\").value);\n    data.append(\"trainingPortion\", this.dataForm.get(\"trainingPortion\").value);  \n    data.append(\"validationPortion\", this.dataForm.get(\"validationPortion\").value);\n    data.append(\"trainingFile\", this.dataForm.get(\"trainingFile\").value);\n    data.append(\"testingFile\", this.dataForm.get(\"testingFile\").value);\n    data.append(\"validationFile\", this.dataForm.get(\"validationFile\").value);  \n    data.append(\"pruneInfogain\", this.dataForm.get(\"pruneInfogain\").value); \n    data.append(\"pruneCount\", this.dataForm.get(\"pruneCount\").value);  \n    data.append(\"vectorToSequence\", this.dataForm.get(\"vectorToSequence\").value);   \n    data.append(\"hideTargets\", this.dataForm.get(\"hideTargets\").value);  \n    data.append(\"revealTargets\", this.dataForm.get(\"revealTargets\").value);       \n\n    this.submitted = true;\n    this.isLoading = true;\n    this.mallet.runsplit(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9tYWxsZXQvbWFsbGV0LXRyYWluY2xhc3NpZmllci9tYWxsZXQtdHJhaW5jbGFzc2lmaWVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { MalletService} from '../mallet.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-mallet-trainclassifier',\n  templateUrl: './mallet-trainclassifier.component.html',\n  styleUrls: ['./mallet-trainclassifier.component.css']\n  \n})\nexport class MalletTrainclassifierComponent implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public mallet: MalletService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        inputFile: [, Validators.required],\n        outputClassifier: [, Validators.required], \n        prefixCode: [\"null\", Validators.required],\n        report: [\"test:accuracy test:confusion train:accuracy\", Validators.required], \n        trainer: [\"new NaiveBayesTrainer()\", Validators.required],\n        trainingPortion: [1.0, Validators.required], \n        validationPortion: [0.0, Validators.required],        \n        unlabeledPortion: [0.0, Validators.required], \n        randomSeed: [0, Validators.required],\n        numTrials: [1, Validators.required],\n        classifierEvaluator: [\"null\", Validators.required],\n        verbosity: [-1, Validators.required],\n        noOverwriteProgressMessages: [\"false\", Validators.required], \n        crossValidation: [0, Validators.required],\n        trainingFile: [\"null\", Validators.required],   \n        testingFile: [\"null\", Validators.required], \n        validationFile: [\"null\", Validators.required]           \n    });\n    if (this.isLoading==false) {\n      this.mallet.testtrainclassifierConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Mallet Train Topics service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/mallet-traintopics-service, start image, and set port to 3013'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"inputFile\", this.dataForm.get(\"inputFile\").value);\n    data.append(\"outputClassifier\", this.dataForm.get(\"outputClassifier\").value);  \n    data.append(\"prefixCode\", this.dataForm.get(\"prefixCode\").value);\n    data.append(\"report\", this.dataForm.get(\"report\").value);  \n    data.append(\"trainer\", this.dataForm.get(\"trainer\").value);\n    data.append(\"trainingPortion\", this.dataForm.get(\"trainingPortion\").value);  \n    data.append(\"validationPortion\", this.dataForm.get(\"validationPortion\").value);\n    data.append(\"unlabeledPortion\", this.dataForm.get(\"unlabeledPortion\").value);\n    data.append(\"randomSeed\", this.dataForm.get(\"randomSeed\").value); \n    data.append(\"numTrials\", this.dataForm.get(\"numTrials\").value);\n    data.append(\"classifierEvaluator\", this.dataForm.get(\"classifierEvaluator\").value); \n    data.append(\"verbosity\", this.dataForm.get(\"verbosity\").value); \n    data.append(\"noOverwriteProgressMessages\", this.dataForm.get(\"noOverwriteProgressMessages\").value);\n    data.append(\"crossValidation\", this.dataForm.get(\"crossValidation\").value);  \n    data.append(\"trainingFile\", this.dataForm.get(\"trainingFile\").value);\n    data.append(\"testingFile\", this.dataForm.get(\"testingFile\").value);\n    data.append(\"validationFile\", this.dataForm.get(\"validationFile\").value);  \n    \n    this.submitted = true;\n    this.isLoading = true;\n    this.mallet.runtrainclassifier(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuLi9tYWxsZXQvbWFsbGV0LXRyYWludG9waWNzL21hbGxldC10cmFpbnRvcGljcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication.service';\nimport { MalletService} from '../mallet.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormArray,\n  FormControl\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-mallet-traintopics',\n  templateUrl: './mallet-traintopics.component.html',\n  styleUrls: ['./mallet-traintopics.component.css']\n  \n})\nexport class MalletTraintopicsComponent implements OnInit {  \n  public dataForm: FormGroup;\n \n  public results=null;\n  public submitted = false;\n  public isLoading = false;\n  public error = null;\n  \n  constructor(public auth:AuthenticationService,public mallet: MalletService,public formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dataForm = this.formBuilder.group({   \n        topicmodelFile: [, Validators.required],\n        inferencerFilename: [, Validators.required], \n        numtopwords: [20, Validators.required],\n        numTopics: [10, Validators.required],  \n        numThreads: [1, Validators.required],\n        numIterations: [1000, Validators.required], \n        doctopicsThreshold: [0.0, Validators.required],\n        prefixCode: [\"null\", Validators.required],\n        docTopicsMax: [-1, Validators.required], \n        randomSeed: [0, Validators.required],\n        usePam: [\"false\", Validators.required],\n        useNgrams: [\"false\", Validators.required],\n        showTopicsInterval: [50, Validators.required],\n        outputModelInterval: [0, Validators.required], \n        alpha: [50.0, Validators.required],\n        outputStateInterval: [0, Validators.required],        \n        optimizeInterval: [0, Validators.required], \n        beta: [0.01, Validators.required],\n        optimizeBurnin: [200, Validators.required], \n        useSymmetricAlpha: [\"false\", Validators.required],\n        gamma: [0.01, Validators.required], \n        delta: [0.03, Validators.required],\n        delta1: [0.2, Validators.required],\n        delta2: [1000.0, Validators.required], \n        pamNumSupertopics: [10, Validators.required],\n        pamNumSubtopics: [20, Validators.required],  \n        languageInput: [\"null\", Validators.required],\n        testing: [\"null\", Validators.required], \n        outputModel: [\"null\", Validators.required],\n        inputModel: [\"null\", Validators.required],\n        evaluatorFilename: [\"null\", Validators.required], \n        outputState: [\"null\", Validators.required],\n        outputTopicKeys: [\"null\", Validators.required],  \n        topicWordWeightsFile: [\"null\", Validators.required],\n        wordTopicCountsFile: [\"null\", Validators.required], \n        xmlTopicReport: [\"null\", Validators.required],\n        xmlTopicPhraseReport: [\"null\", Validators.required],\n        outputDocTopics: [\"null\", Validators.required]        \n    });\n    if (this.isLoading==false) {\n      this.mallet.testtraintopicsConnection().subscribe(\n        resData => {       \n        },\n        errorMessage => {\n          this.error='Could not connect to Mallet Train Topics service, \\n please download at https://hub.docker.com/repository/docker/nsfsain/mallet-traintopics-service, start image, and set port to 3013'\n        });\n    }\n  }\n  get f() {\n    return this.dataForm.controls;\n  }\n\n  onSubmit() {\n    \n    if (\n      !this.dataForm.valid \n    ) {\n      return;\n    }\n    const data = new FormData();  \n    data.append(\"topicmodelFile\", this.dataForm.get(\"topicmodelFile\").value);\n    data.append(\"inferencerFilename\", this.dataForm.get(\"inferencerFilename\").value);  \n    data.append(\"numtopwords\", this.dataForm.get(\"numtopwords\").value);\n    data.append(\"numTopics\", this.dataForm.get(\"numTopics\").value);  \n    data.append(\"numThreads\", this.dataForm.get(\"numThreads\").value);\n    data.append(\"numIterations\", this.dataForm.get(\"numIterations\").value);  \n    data.append(\"doctopicsThreshold\", this.dataForm.get(\"doctopicsThreshold\").value);\n    data.append(\"prefixCode\", this.dataForm.get(\"prefixCode\").value);\n    data.append(\"docTopicsMax\", this.dataForm.get(\"docTopicsMax\").value); \n    data.append(\"randomSeed\", this.dataForm.get(\"randomSeed\").value);\n    data.append(\"usePam\", this.dataForm.get(\"usePam\").value); \n    data.append(\"useNgrams\", this.dataForm.get(\"useNgrams\").value); \n    data.append(\"showTopicsInterval\", this.dataForm.get(\"showTopicsInterval\").value);\n    data.append(\"outputModelInterval\", this.dataForm.get(\"outputModelInterval\").value);  \n    data.append(\"alpha\", this.dataForm.get(\"alpha\").value);\n    data.append(\"outputStateInterval\", this.dataForm.get(\"outputStateInterval\").value);\n    data.append(\"optimizeInterval\", this.dataForm.get(\"optimizeInterval\").value);  \n    data.append(\"beta\", this.dataForm.get(\"beta\").value);\n    data.append(\"optimizeBurnin\", this.dataForm.get(\"optimizeBurnin\").value);  \n    data.append(\"useSymmetricAlpha\", this.dataForm.get(\"useSymmetricAlpha\").value);\n    data.append(\"gamma\", this.dataForm.get(\"gamma\").value);  \n    data.append(\"delta\", this.dataForm.get(\"delta\").value);\n    data.append(\"delta1\", this.dataForm.get(\"delta1\").value);\n    data.append(\"delta2\", this.dataForm.get(\"delta2\").value);  \n    data.append(\"pamNumSupertopics\", this.dataForm.get(\"pamNumSupertopics\").value);\n    data.append(\"pamNumSubtopics\", this.dataForm.get(\"pamNumSubtopics\").value);      \n    data.append(\"languageInput\", this.dataForm.get(\"languageInput\").value);\n    data.append(\"testing\", this.dataForm.get(\"testing\").value);  \n    data.append(\"outputModel\", this.dataForm.get(\"outputModel\").value);\n    data.append(\"inputModel\", this.dataForm.get(\"inputModel\").value);  \n    data.append(\"evaluatorFilename\", this.dataForm.get(\"evaluatorFilename\").value);\n    data.append(\"outputState\", this.dataForm.get(\"outputState\").value);\n    data.append(\"topicWordWeightsFile\", this.dataForm.get(\"topicWordWeightsFile\").value);  \n    data.append(\"outputTopicKeys\", this.dataForm.get(\"outputTopicKeys\").value);\n    data.append(\"wordTopicCountsFile\", this.dataForm.get(\"wordTopicCountsFile\").value);   \n    data.append(\"xmlTopicReport\", this.dataForm.get(\"xmlTopicReport\").value);\n    data.append(\"xmlTopicPhraseReport\", this.dataForm.get(\"xmlTopicPhraseReport\").value);  \n    data.append(\"outputDocTopics\", this.dataForm.get(\"outputDocTopics\").value);\n    this.submitted = true;\n    this.isLoading = true;\n    this.mallet.runtraintopics(data).subscribe(\n      resData => {\n        this.results=resData;\n        console.log(this.results)\n        this.isLoading=false;\n      },\n      errorMessage => {\n        console.log(errorMessage)\n        this.error='Unable to execute from back-end' \n        this.isLoading=false;\n      });    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MalletService  {  \n \n  constructor(public http: HttpClient) { }\n\n  //import-dir\n  public testimportdirConnection():Observable<any>{    \n    return this.http.get(environment.mallet_importdir_url + '/engine/mallet'); \n  }\n\n  public runimportdir(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3012//engine/mallet/topicmodel',data);\n    return this.http.post(environment.mallet_importdir_url + '/engine/mallet/topicmodel',data).pipe(timeout(2400000));\n  }\n\n  //train-topics\n  public testtraintopicsConnection():Observable<any>{    \n    return this.http.get(environment.mallet_traintopics_url + '/engine/mallet'); \n  }\n\n  public runtraintopics(data:any):Observable<any>{    \n    // return this.http.post('http://localhost:3012//engine/mallet/traintopics',data);\n    return this.http.post(environment.mallet_traintopics_url + '/engine/mallet/traintopics',data).pipe(timeout(2400000));\n  }\n\n  //import-file\n  public testimportfileConnection():Observable<any>{    \n    return this.http.get(environment.mallet_importfile_url + '/engine/mallet'); \n  }\n\n  public runimportfile(data:any):Observable<any>{\n    // return this.http.post('http://localhost:3012//engine/mallet/importfile',data);\n    return this.http.post(environment.mallet_importfile_url + '/engine/mallet/importfile',data).pipe(timeout(2400000));\n  }\n\n  //train-classifier\n  public testtrainclassifierConnection():Observable<any>{    \n    return this.http.get(environment.mallet_trainclassifier_url + '/engine/mallet'); \n  }\n\n  public runtrainclassifier(data:any):Observable<any>{    \n    // return this.http.post('http://localhost:3012//engine/mallet/trainclassifier',data);\n    return this.http.post(environment.mallet_trainclassifier_url + '/engine/mallet/trainclassifier',data).pipe(timeout(2400000));\n  }\n\n  //infer-topics\n  public testinfertopicsConnection():Observable<any>{    \n    return this.http.get(environment.mallet_infertopics_url + '/engine/mallet'); \n  }\n\n  public runinfertopics(data:any):Observable<any>{    \n    // return this.http.post('http://localhost:3012//engine/mallet/infertopics',data);\n    return this.http.post(environment.mallet_infertopics_url + '/engine/mallet/infertopics',data).pipe(timeout(2400000));\n  }\n\n  //hlda\n  public testhldasConnection():Observable<any>{    \n    return this.http.get(environment.mallet_hlda_url + '/engine/mallet'); \n  }\n\n  public runhlda(data:any):Observable<any>{    \n    // return this.http.post('http://localhost:3012//engine/mallet/hlda',data);\n    return this.http.post(environment.mallet_hlda_url + '/engine/mallet/hlda',data).pipe(timeout(2400000));\n  }\n\n  //prune\n  public testpruneConnection():Observable<any>{    \n    return this.http.get(environment.mallet_prune_url + '/engine/mallet'); \n  }\n\n  public runprune(data:any):Observable<any>{    \n    // return this.http.post('http://localhost:3012//engine/mallet/prune',data);\n    return this.http.post(environment.mallet_prune_url + '/engine/mallet/prune',data).pipe(timeout(2400000));\n  }\n\n  //prune\n  public testsplitConnection():Observable<any>{    \n    return this.http.get(environment.mallet_split_url + '/engine/mallet'); \n  }\n\n  public runsplit(data:any):Observable<any>{    \n    // return this.http.post('http://localhost:3012//engine/mallet/split',data);\n    return this.http.post(environment.mallet_split_url + '/engine/mallet/split',data).pipe(timeout(2400000));\n  }\n\n}","export default \".lds-ring {\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n    width: 80px;\\r\\n    height: 80px;\\r\\n  }\\r\\n  .lds-ring div {\\r\\n    box-sizing: border-box;\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    width: 64px;\\r\\n    height: 64px;\\r\\n    margin: 8px;\\r\\n    border: 8px solid var(--primary);\\r\\n    border-radius: 50%;\\r\\n    -webkit-animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\r\\n            animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\r\\n    border-color: var(--primary) transparent transparent transparent;\\r\\n  }\\r\\n  .lds-ring div:nth-child(1) {\\r\\n    -webkit-animation-delay: -0.45s;\\r\\n            animation-delay: -0.45s;\\r\\n  }\\r\\n  .lds-ring div:nth-child(2) {\\r\\n    -webkit-animation-delay: -0.3s;\\r\\n            animation-delay: -0.3s;\\r\\n  }\\r\\n  .lds-ring div:nth-child(3) {\\r\\n    -webkit-animation-delay: -0.15s;\\r\\n            animation-delay: -0.15s;\\r\\n  }\\r\\n  @-webkit-keyframes lds-ring {\\r\\n    0% {\\r\\n      -webkit-transform: rotate(0deg);\\r\\n              transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n      -webkit-transform: rotate(360deg);\\r\\n              transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n  @keyframes lds-ring {\\r\\n    0% {\\r\\n      -webkit-transform: rotate(0deg);\\r\\n              transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n      -webkit-transform: rotate(360deg);\\r\\n              transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NoYXJlZC9sb2FkaW5nLXNwaW5uZXIvbG9hZGluZy1zcGlubmVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0VBQ2Q7RUFDQTtJQUNFLHNCQUFzQjtJQUN0QixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osV0FBVztJQUNYLGdDQUFnQztJQUNoQyxrQkFBa0I7SUFDbEIsc0VBQThEO1lBQTlELDhEQUE4RDtJQUM5RCxnRUFBZ0U7RUFDbEU7RUFDQTtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUI7RUFDekI7RUFDQTtJQUNFLDhCQUFzQjtZQUF0QixzQkFBc0I7RUFDeEI7RUFDQTtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUI7RUFDekI7RUFDQTtJQUNFO01BQ0UsK0JBQXVCO2NBQXZCLHVCQUF1QjtJQUN6QjtJQUNBO01BQ0UsaUNBQXlCO2NBQXpCLHlCQUF5QjtJQUMzQjtFQUNGO0VBUEE7SUFDRTtNQUNFLCtCQUF1QjtjQUF2Qix1QkFBdUI7SUFDekI7SUFDQTtNQUNFLGlDQUF5QjtjQUF6Qix5QkFBeUI7SUFDM0I7RUFDRiIsImZpbGUiOiIuLi8uLi9zaGFyZWQvbG9hZGluZy1zcGlubmVyL2xvYWRpbmctc3Bpbm5lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxkcy1yaW5nIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiA4MHB4O1xyXG4gICAgaGVpZ2h0OiA4MHB4O1xyXG4gIH1cclxuICAubGRzLXJpbmcgZGl2IHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiA2NHB4O1xyXG4gICAgaGVpZ2h0OiA2NHB4O1xyXG4gICAgbWFyZ2luOiA4cHg7XHJcbiAgICBib3JkZXI6IDhweCBzb2xpZCB2YXIoLS1wcmltYXJ5KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGFuaW1hdGlvbjogbGRzLXJpbmcgMS4ycyBjdWJpYy1iZXppZXIoMC41LCAwLCAwLjUsIDEpIGluZmluaXRlO1xyXG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1wcmltYXJ5KSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcclxuICB9XHJcbiAgLmxkcy1yaW5nIGRpdjpudGgtY2hpbGQoMSkge1xyXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAtMC40NXM7XHJcbiAgfVxyXG4gIC5sZHMtcmluZyBkaXY6bnRoLWNoaWxkKDIpIHtcclxuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuM3M7XHJcbiAgfVxyXG4gIC5sZHMtcmluZyBkaXY6bnRoLWNoaWxkKDMpIHtcclxuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuMTVzO1xyXG4gIH1cclxuICBAa2V5ZnJhbWVzIGxkcy1yaW5nIHtcclxuICAgIDAlIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICAgIH1cclxuICB9XHJcbiAgIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  auth_url: 'http://localhost:3000',\n  arcade_depsbuilder_url: 'http://localhost:3001',\n  arcade_acdc_url: 'http://localhost:3002',\n  arcade_archsmelldetector_url: 'http://localhost:3003',\n  arcade_pkg_url: 'http://localhost:3004',\n  arcade_a2a_url: 'http://localhost:3005',\n  arcade_cvg_url: 'http://localhost:3006',\n  arcade_c2caverageanalyze_url: 'http://localhost:3007',\n  arcade_decaymetrics_url: 'http://localhost:3008',\n  arcade_smelldensityanalyzer_url: 'http://localhost:3009',\n  arcade_smellevolutionanalyzer_url: 'http://localhost:3010',\n  arcade_pipeextractor_url: 'http://localhost:3011',\n  mallet_importdir_url: 'http://localhost:3012',\n  mallet_traintopics_url: 'http://localhost:3013',\n  arcade_arc_url: 'http://localhost:3014',\n  mallet_importfile_url: 'http://localhost:3015',\n  mallet_trainclassifier_url: 'http://localhost:3016',\n  mallet_infertopics_url: 'http://localhost:3017',\n  mallet_hlda_url: 'http://localhost:3018',\n  mallet_prune_url: 'http://localhost:3019',\n  mallet_split_url: 'http://localhost:3020',\n  codemaat_vcs_url: 'http://localhost:3021',\n  git_log_url: 'http://localhost:3022',\n  linux_sed_url: 'http://localhost:3023',\n  arcade_cleanupcodemaat_url: 'http://localhost:3024',\n  arcade_batchclonefinder_url: 'http://localhost:3025',\n  arcade_depfindrunner_url: 'http://localhost:3026',\n  arcade_dependencyfinderprocessing_url: 'http://localhost:3027',  \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}